Ï 
QC:\Users\qayum\source\repos\Practice\Practice\Services\UserService\UserService.cs
	namespace		 	
Practice		
 
.		 
Services		 
.		 
UserService		 '
{

 
public 

class 
UserService 
: 
IUserService +
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
IMapper  
_mapper! (
;( )
public 
UserService 
( 
AppDbContext '
context( /
,/ 0
IMapper 
mapper 
) 
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
Response "
>" # 
EditUserProfileAsync$ 8
(8 9
Guid9 =
id> @
,@ A
EditUserDtoB M
editUserDtoN Y
)Y Z
{ 	
var 
user 
= 
await 
_context %
.% &
User& *
.* +

FirstAsync+ 5
(5 6
e6 7
=>8 :
e; <
.< =
Id= ?
==@ B
idC E
)E F
;F G
user 
. 
Email 
= 
editUserDto $
.$ %
Email% *
.* +
IsNullOrEmpty+ 8
(8 9
)9 :
?; <
user= A
.A B
EmailB G
:H I
editUserDtoJ U
.U V
EmailV [
;[ \
user 
. 
FullName 
= 
editUserDto '
.' (
FullName( 0
.0 1
IsNullOrEmpty1 >
(> ?
)? @
?A B
userC G
.G H
FullNameH P
:Q R
editUserDtoS ^
.^ _
FullName_ g
;g h
user 
. 
BirthDay 
= 
editUserDto '
.' (
BirthDay( 0
;0 1
user 
. 
Gender 
= 
editUserDto %
.% &
Gender& ,
;, -
user 
. 
PhoneNumber 
= 
editUserDto *
.* +
Phone+ 0
.0 1
IsNullOrEmpty1 >
(> ?
)? @
?A B
userC G
.G H
PhoneNumberH S
:T U
editUserDtoV a
.a b
Phoneb g
;g h
await!! 
_context!! 
.!! 
SaveChangesAsync!! +
(!!+ ,
)!!, -
;!!- .
var## 
res## 
=## 
new## 
Response## "
{$$ 
Stasus%% 
=%% 
$str%% "
,%%" #
Message&& 
=&& 
$str&& *
}'' 
;'' 
return)) 
res)) 
;)) 
}** 	
public,, 
async,, 
Task,, 
<,, 
UserDto,, !
>,,! "
GetUserProfileAsync,,# 6
(,,6 7
Guid,,7 ;
id,,< >
),,> ?
{-- 	
var.. 
user.. 
=.. 
await.. 
_context.. %
...% &
User..& *
...* +

FirstAsync..+ 5
(..5 6
e..6 7
=>..8 :
e..; <
...< =
Id..= ?
==..@ B
id..C E
)..E F
;..F G
var00 
dto00 
=00 
_mapper00 
.00 
Map00 !
<00! "
UserDto00" )
>00) *
(00* +
user00+ /
)00/ 0
;000 1
return22 
dto22 
;22 
}33 	
}44 
}55 ö
RC:\Users\qayum\source\repos\Practice\Practice\Services\UserService\IUserService.cs
	namespace 	
Practice
 
. 
Services 
. 
UserService '
{ 
public 

	interface 
IUserService !
{ 
Task 
< 
UserDto 
> 
GetUserProfileAsync )
() *
Guid* .
id/ 1
)1 2
;2 3
Task		 
<		 
Response		 
>		  
EditUserProfileAsync		 +
(		+ ,
Guid		, 0
id		1 3
,		3 4
EditUserDto		5 @
editUserDto		A L
)		L M
;		M N
}

 
} ¨+
SC:\Users\qayum\source\repos\Practice\Practice\Services\TokenService\TokenService.cs
	namespace

 	
Practice


 
.

 
Services

 
.

 
TokenService

 (
{ 
public 

class 
TokenService 
: 
ITokenService  -
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public 
TokenService 
( 
AppDbContext (
context) 0
,0 1
IConfiguration2 @
configurationA N
)N O
{ 	
_context 
= 
context 
; 
_configuration 
= 
configuration *
;* +
} 	
public 
Task 
< 
Guid 
> 
GetGuid !
(! "
string" (
token) .
). /
{ 	
var 
handler 
= 
new #
JwtSecurityTokenHandler 5
(5 6
)6 7
;7 8
var 
	jsonToken 
= 
handler #
.# $
	ReadToken$ -
(- .
token. 3
)3 4
;4 5
var 
	readToken 
= 
( 
JwtSecurityToken -
)- .
	jsonToken/ 8
;8 9
var 
res 
= 
	readToken 
.  
Claims  &
.& '
First' ,
(, -
e- .
=>/ 1
e2 3
.3 4
Type4 8
==9 ;

ClaimTypes< F
.F G
NameIdentifierG U
)U V
.V W
ValueW \
;\ ]
return 
Task 
. 

FromResult "
(" #
Guid# '
.' (
Parse( -
(- .
res. 1
)1 2
)2 3
;3 4
} 	
public   
async   
Task   
<   
bool   
>   
IsTokenValid    ,
(  , -
string  - 3
token  4 9
)  9 :
{!! 	
var"" 
res"" 
="" 
await"" 
_context"" $
.""$ %
	UsedToken""% .
."". /
FirstOrDefaultAsync""/ B
(""B C
e""C D
=>""E G
e""H I
.""I J
Token""J O
==""P R
token""S X
)""X Y
;""Y Z
return$$ 
res$$ 
==$$ 
null$$ 
;$$ 
}%% 	
public&& 
string&& 
GenerateUserJwt&& %
(&&% &
User&&& *
user&&+ /
)&&/ 0
{'' 	
var(( 
key(( 
=(( 
_configuration(( $
[(($ %
$str((% .
]((. /
;((/ 0
if** 
(** 
key** 
==** 
null** 
)** 
{** 
throw** #
new**$ '!
ArgumentNullException**( =
(**= >
nameof**> D
(**D E
key**E H
)**H I
)**I J
;**J K
}**L M
var,, 
securityKey,, 
=,, 
new,, ! 
SymmetricSecurityKey,," 6
(,,6 7
Encoding,,7 ?
.,,? @
ASCII,,@ E
.,,E F
GetBytes,,F N
(,,N O
key,,O R
),,R S
),,S T
;,,T U
var-- 
credentials-- 
=-- 
new-- !
SigningCredentials--" 4
(--4 5
securityKey--5 @
,--@ A
SecurityAlgorithms--B T
.--T U

HmacSha256--U _
)--_ `
;--` a
var// 
claims// 
=// 
new// 
List// !
<//! "
Claim//" '
>//' (
(//( )
)//) *
{00 
new11 
Claim11 
(11 

ClaimTypes11 $
.11$ %
NameIdentifier11% 3
,113 4
user115 9
.119 :
Id11: <
.11< =
ToString11= E
(11E F
)11F G
)11G H
,11H I
new22 
Claim22 
(22 

ClaimTypes22 $
.22$ %
Email22% *
,22* +
user22, 0
.220 1
Email221 6
)226 7
}33 
;33 
var55 
token55 
=55 
new55 
JwtSecurityToken55 ,
(55, -
_configuration66 
[66 
$str66 +
]66+ ,
,66, -
_configuration77 
[77 
$str77 -
]77- .
,77. /
claims88 
:88 
claims88 
,88 
expires99 
:99 
DateTime99 !
.99! "
Now99" %
,99% &
signingCredentials:: "
:::" #
credentials::$ /
);; 
;;; 
return== 
new== #
JwtSecurityTokenHandler== .
(==. /
)==/ 0
.==0 1

WriteToken==1 ;
(==; <
token==< A
)==A B
;==B C
}>> 	
}?? 
}@@ ¾
TC:\Users\qayum\source\repos\Practice\Practice\Services\TokenService\ITokenService.cs
	namespace 	
Practice
 
. 
Services 
. 
TokenService (
{ 
public 

	interface 
ITokenService "
{ 
Task 
< 
Guid 
> 
GetGuid 
( 
string !
token" '
)' (
;( )
Task 
< 
bool 
> 
IsTokenValid 
(  
string  &
token' ,
), -
;- .
public		 
string		 
GenerateUserJwt		 %
(		% &
User		& *
user		+ /
)		/ 0
;		0 1
}

 
} 4
OC:\Users\qayum\source\repos\Practice\Practice\Services\TagService\TagService.cs
	namespace 	
Practice
 
. 
Services 
. 

TagService &
{ 
public 

class 

TagService 
: 
ITagService )
{ 
private		 
readonly		 
AppDbContext		 %
_context		& .
;		. /
public 

TagService 
( 
AppDbContext &
context' .
). /
{ 	
_context 
= 
context 
; 
} 	
public 
Task 
< 
List 
< 
TagDto 
>  
>  !
GetTagDtoList" /
(/ 0
)0 1
{ 	
var 
list 
= 
_context 
.  
Tag  #
.# $
ToList$ *
(* +
)+ ,
;, -
var 
dtoList 
= 
new 
List "
<" #
TagDto# )
>) *
(* +
)+ ,
;, -
foreach 
( 
var 
item 
in  
list! %
)% &
{ 
dtoList 
. 
Add 
( 
new 
TagDto  &
(& '
)' (
{) *
Id+ -
=. /
item0 4
.4 5
Id5 7
,7 8
Name9 =
=> ?
item@ D
.D E
NameE I
,I J

CreateTimeK U
=V W
itemX \
.\ ]
CreatedTime] h
}i j
)j k
;k l
} 
return 
Task 
. 

FromResult "
(" #
dtoList# *
)* +
;+ ,
} 	
public 
async 
Task 
< 
List 
< 
Tag "
>" #
># $
GetTagListByIdList% 7
(7 8
List8 <
<< =
Guid= A
>A B
guidesC I
)I J
{ 	
var   
tagList   
=   
new   
List   "
<  " #
Tag  # &
>  & '
(  ' (
)  ( )
;  ) *
foreach"" 
("" 
var"" 
guide"" 
in""  
guides""! '
)""' (
{## 
var$$ 
tag$$ 
=$$ 
await$$ 
_context$$  (
.$$( )
Tag$$) ,
.$$, -
	FindAsync$$- 6
($$6 7
guide$$7 <
)$$< =
;$$= >
if%% 
(%% 
tag%% 
==%% 
null%% 
)%% 
{%%  !
continue%%" *
;%%* +
}%%, -
tagList&& 
.&& 
Add&& 
(&& 
tag&& 
)&&  
;&&  !
}'' 
return)) 
tagList)) 
;)) 
}** 	
public,, 
Task,, 
AddTagsToPost,, !
(,,! "
Post,," &
post,,' +
,,,+ ,
List,,- 1
<,,1 2
Guid,,2 6
>,,6 7
tagGuidList,,8 C
),,C D
{-- 	
var.. 
postTaglist.. 
=.. 
post.. "
..." #
Tags..# '
...' (
ToList..( .
(... /
)../ 0
;..0 1
tagGuidList00 
=00 
tagGuidList00 %
.00% &
Distinct00& .
(00. /
)00/ 0
.000 1
ToList001 7
(007 8
)008 9
;009 :
foreach22 
(22 
var22 
tag22 
in22 
postTaglist22  +
)22+ ,
{33 
foreach44 
(44 
var44 
id44 
in44 !
tagGuidList44" -
)44- .
{55 
if66 
(66 
tag66 
.66 
Id66 
==66  
id66! #
)66# $
continue66% -
;66- .
var77 

currentTag77 "
=77# $
_context77% -
.77- .
Tag77. 1
.771 2
First772 7
(777 8
x778 9
=>77: <
x77= >
.77> ?
Id77? A
==77B D
id77E G
)77G H
;77H I
post88 
.88 
Tags88 
.88 
Add88 !
(88! "

currentTag88" ,
)88, -
;88- .
}99 
}:: 
return<< 
Task<< 
.<< 
CompletedTask<< %
;<<% &
}== 	
public?? 
Task?? 
DeleteTagsFromPost?? &
(??& '
Post??' +
post??, 0
,??0 1
List??2 6
<??6 7
Guid??7 ;
>??; <
tagGuidList??= H
)??H I
{@@ 	
varAA 
postTaglistAA 
=AA 
postAA "
.AA" #
TagsAA# '
.AA' (
ToListAA( .
(AA. /
)AA/ 0
;AA0 1
tagGuidListCC 
=CC 
tagGuidListCC %
.CC% &
DistinctCC& .
(CC. /
)CC/ 0
.CC0 1
ToListCC1 7
(CC7 8
)CC8 9
;CC9 :
foreachEE 
(EE 
varEE 
tagEE 
inEE 
postTaglistEE  +
)EE+ ,
{FF 
foreachGG 
(GG 
varGG 
idGG 
inGG  "
tagGuidListGG# .
)GG. /
{HH 
ifII 
(II 
tagII 
.II 
IdII 
!=II !
idII" $
)II$ %
continueII& .
;II. /
varJJ 

currentTagJJ "
=JJ# $
_contextJJ% -
.JJ- .
TagJJ. 1
.JJ1 2
FirstJJ2 7
(JJ7 8
xJJ8 9
=>JJ: <
xJJ= >
.JJ> ?
IdJJ? A
==JJB D
idJJE G
)JJG H
;JJH I
postKK 
.KK 
TagsKK 
.KK 
RemoveKK $
(KK$ %

currentTagKK% /
)KK/ 0
;KK0 1
}LL 
}MM 
returnOO 
TaskOO 
.OO 
CompletedTaskOO %
;OO% &
}PP 	
}QQ 
}RR é	
PC:\Users\qayum\source\repos\Practice\Practice\Services\TagService\ITagService.cs
	namespace 	
Practice
 
. 
Services 
. 

TagService &
{ 
public 

	interface 
ITagService  
{ 
Task 
< 
List 
< 
TagDto 
> 
> 
GetTagDtoList (
(( )
)) *
;* +
Task		 
<		 
List		 
<		 
Tag		 
>		 
>		 
GetTagListByIdList		 *
(		* +
List		+ /
<		/ 0
Guid		0 4
>		4 5
guids		6 ;
)		; <
;		< =
Task

 
AddTagsToPost

 
(

 
Post

 
post

  $
,

$ %
List

& *
<

* +
Guid

+ /
>

/ 0
tagGuidList

1 <
)

< =
;

= >
Task 
DeleteTagsFromPost 
(  
Post  $
post% )
,) *
List+ /
</ 0
Guid0 4
>4 5
tagGuidList6 A
)A B
;B C
} 
} »ð
QC:\Users\qayum\source\repos\Practice\Practice\Services\PostService\PostService.cs
	namespace 	
Practice
 
. 
Services 
. 
PostService '
{ 
public		 

class		 
PostService		 
:		 
IPostService		 +
{

 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
IMapper  
_mapper! (
;( )
public 
PostService 
( 
AppDbContext '
context( /
,/ 0
IMapper 
mapper 
) 
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
List 
< 
PostDto &
>& '
?' (
>( )
GetPostDtoList* 8
(8 9

Pagination9 C

paginationD N
)N O
{ 	
var 
	pagePosts 
= 
await !
GetPagePosts" .
(. /

pagination/ 9
)9 :
;: ;
if 
( 
	pagePosts 
== 
null  
)  !
return" (
null) -
;- .
var 
dtoList 
= 
new 
List "
<" #
PostDto# *
>* +
(+ ,
), -
;- .
foreach 
( 
var 
post 
in  
	pagePosts! *
)* +
{ 
var 
postDto 
= 
_mapper %
.% &
Map& )
<) *
PostDto* 1
>1 2
(2 3
post3 7
)7 8
;   
postDto!! 
.!! 
TagList!! 
=!!  !
await!!" '
GetTagDtoList!!( 5
(!!5 6
post!!6 :
.!!: ;
Tags!!; ?
.!!? @
ToList!!@ F
(!!F G
)!!G H
)!!H I
;!!I J
postDto"" 
."" 

AuthorName"" "
=""# $
_context""% -
.""- .
User"". 2
.""2 3
First""3 8
(""8 9
e""9 :
=>""; =
e""> ?
.""? @
Id""@ B
==""C E
post""F J
.""J K
UserId""K Q
)""Q R
.""R S
FullName""S [
;""[ \
dtoList$$ 
.$$ 
Add$$ 
($$ 
postDto$$ #
)$$# $
;$$$ %
}%% 
return'' 
dtoList'' 
;'' 
}(( 	
public** 
async** 
Task** 
<** 
Response** "
>**" #
DisLikePost**$ /
(**/ 0
Guid**0 4
userId**5 ;
,**; <
Guid**= A
postId**B H
)**H I
{++ 	
var,, 
post,, 
=,, 
await,, 
_context,, %
.,,% &
Post,,& *
.-- 
Include-- 
(-- 
e-- 
=>-- 
e-- 
.--  
Likes--  %
)--% &
... 
FirstOrDefaultAsync.. $
(..$ %
e..% &
=>..' )
e..* +
...+ ,
Id.., .
==../ 1
postId..2 8
)..8 9
;..9 :
var00 
response00 
=00 
new00 
Response00 '
(00' (
)00( )
;00) *
if22 
(22 
post22 
==22 
null22 
)22 
{33 
response44 
.44 
Stasus44 
=44  !
$str44" (
;44( )
response55 
.55 
Message55  
=55! "
$str55# 3
;553 4
return77 
response77 
;77  
}88 
var:: 
user:: 
=:: 
await:: 
_context:: %
.::% &
User::& *
.;; 
Include;; 
(;; 
e;; 
=>;; 
e;; 
.;;  
Likes;;  %
);;% &
.<< 

FirstAsync<< 
(<< 
e<< 
=><<  
e<<! "
.<<" #
Id<<# %
==<<& (
userId<<) /
)<</ 0
;<<0 1
var>> 
	LikedPost>> 
=>> 
await>> !
_context>>" *
.>>* +
Like>>+ /
.>>/ 0

FirstAsync>>0 :
(>>: ;
e>>; <
=>>>= ?
e>>@ A
.>>A B
UserId>>B H
==>>I K
userId>>L R
&&>>S U
e>>V W
.>>W X
PostId>>X ^
==>>_ a
postId>>b h
)>>h i
;>>i j
if@@ 
(@@ 
	LikedPost@@ 
==@@ 
null@@ !
)@@! "
return@@# )
null@@* .
;@@. /
_contextBB 
.BB 
LikeBB 
.BB 
RemoveBB  
(BB  !
	LikedPostBB! *
)BB* +
;BB+ ,
awaitDD 
_contextDD 
.DD 
SaveChangesAsyncDD +
(DD+ ,
)DD, -
;DD- .
responseGG 
.GG 
StasusGG 
=GG 
$strGG '
;GG' (
responseHH 
.HH 
MessageHH 
=HH 
$strHH 6
;HH6 7
returnJJ 
responseJJ 
;JJ 
}KK 	
publicMM 
asyncMM 
TaskMM 
<MM 
PostWithCommentsDtoMM -
?MM- .
>MM. /
GetPostDtoByIdMM0 >
(MM> ?
GuidMM? C
idMMD F
)MMF G
{NN 	
varOO 
postOO 
=OO 
awaitOO 
_contextOO %
.OO% &
PostOO& *
.PP 
IncludePP 
(PP 
ePP 
=>PP 
ePP 
.PP  
TagsPP  $
)PP$ %
.QQ 
IncludeQQ 
(QQ 
eQQ 
=>QQ 
eQQ 
.QQ  
LikesQQ  %
)QQ% &
.RR 
IncludeRR 
(RR 
eRR 
=>RR 
eRR 
.RR  
UserRR  $
)RR$ %
.SS 
IncludeSS 
(SS 
eSS 
=>SS 
eSS 
.SS  
CommentsSS  (
)SS( )
.TT 
FirstOrDefaultAsyncTT $
(TT$ %
eTT% &
=>TT' )
eTT* +
.TT+ ,
IdTT, .
==TT/ 1
idTT2 4
)TT4 5
;TT5 6
ifVV 
(VV 
postVV 
==VV 
nullVV 
)VV 
returnVV $
nullVV% )
;VV) *
varXX 
commentsListXX 
=XX 
newXX "
ListXX# '
<XX' (

CommentDtoXX( 2
>XX2 3
(XX3 4
)XX4 5
;XX5 6
foreachZZ 
(ZZ 
varZZ 
commentZZ  
inZZ! #
postZZ$ (
.ZZ( )
CommentsZZ) 1
)ZZ1 2
{[[ 
var\\ 
subComments\\ 
=\\  !
await\\" '
_context\\( 0
.\\0 1
Comment\\1 8
.\\8 9
Include\\9 @
(\\@ A
e\\A B
=>\\C E
e\\F G
.\\G H
ChildComments\\H U
)\\U V
.\\V W

FirstAsync\\W a
(\\a b
e\\b c
=>\\d f
e\\g h
.\\h i
Id\\i k
==\\l n
comment\\o v
.\\v w
Id\\w y
)\\y z
;\\z {
var]] 
subCommentsCount]] $
=]]% &
subComments]]' 2
.]]2 3
ChildComments]]3 @
==]]A C
null]]D H
?]]I J
$num]]K L
:]]M N
subComments]]O Z
.]]Z [
ChildComments]][ h
.]]h i
Count]]i n
;]]n o
if__ 
(__ 
comment__ 
.__ 
ParentCommentId__ +
!=__, .
null__/ 3
)__3 4
continue__5 =
;__= >
varaa 

commentDtoaa 
=aa  
_mapperaa! (
.aa( )
Mapaa) ,
<aa, -

CommentDtoaa- 7
>aa7 8
(aa8 9
commentaa9 @
)aa@ A
;aaA B

commentDtocc 
.cc 
SubCommentsCountcc +
=cc, -
subCommentsCountcc. >
;cc> ?
commentsListee 
.ee 
Addee  
(ee  !

commentDtoee! +
)ee+ ,
;ee, -
}ff 
varhh 
	postDtoWChh 
=hh 
_mapperhh #
.hh# $
Maphh$ '
<hh' (
PostWithCommentsDtohh( ;
>hh; <
(hh< =
posthh= A
)hhA B
;hhB C
	postDtoWCjj 
.jj 
PostIdjj 
=jj 
idjj !
;jj! "
	postDtoWCkk 
.kk 
TagListkk 
=kk 
awaitkk  %
GetTagDtoListkk& 3
(kk3 4
postkk4 8
.kk8 9
Tagskk9 =
.kk= >
ToListkk> D
(kkD E
)kkE F
)kkF G
;kkG H
	postDtoWCll 
.ll 
CommentListll !
=ll" #
commentsListll$ 0
;ll0 1
returnnn 
	postDtoWCnn 
;nn 
}oo 	
privateqq 
asyncqq 
Taskqq 
<qq 
Listqq 
<qq  
Postqq  $
>qq$ %
?qq% &
>qq& '
GetPagePostsqq( 4
(qq4 5

Paginationqq5 ?

paginationqq@ J
)qqJ K
{rr 	
varss 
postListss 
=ss 
awaitss  

SortSwitchss! +
(ss+ ,

paginationss, 6
.ss6 7
Sortss7 ;
)ss; <
;ss< =
varuu 
nameSortuu 
=uu 
postListuu #
;uu# $
ifww 
(ww 

paginationww 
.ww 

AuthorNameww %
!=ww& (
nullww) -
)ww- .
nameSortww/ 7
=ww8 9
awaitww: ?
SearchByAuthorww@ N
(wwN O
postListwwO W
,wwW X

paginationwwY c
.wwc d

AuthorNamewwd n
)wwn o
;wwo p
varyy 
	tagSortedyy 
=yy 
nameSortyy $
;yy$ %
if{{ 
({{ 

pagination{{ 
.{{ 
TagGuidList{{ &
!={{' )
null{{* .
&&{{/ 1

pagination{{2 <
.{{< =
TagGuidList{{= H
.{{H I
Count{{I N
!={{O Q
$num{{R S
){{S T
	tagSorted{{U ^
={{_ `
await{{a f
	SortByTag{{g p
({{p q
nameSort{{q y
,{{y z

pagination	{{{ 
.
{{ 
TagGuidList
{{ 
)
{{ 
;
{{ 
if}} 
(}} 
	tagSorted}} 
.}} 
Count}} 
==}}  "
$num}}# $
)}}$ %
return}}& ,
null}}- 1
;}}1 2
var 
readTimeSorted 
=  
	tagSorted! *
;* +
if
 
(
 

pagination
 
.
 
MinReadTime
 &
!=
' )
$num
* +
||
, .

pagination
/ 9
.
9 :
MaxReadTime
: E
!=
F H
$num
I J
)
J K
readTimeSorted
 
=
  
await
! &
ReadTimeSort
' 3
(
3 4
	tagSorted
4 =
,
= >

pagination
? I
.
I J
MinReadTime
J U
,
U V

pagination
W a
.
a b
MaxReadTime
b m
)
m n
;
n o
if
 
(
 
readTimeSorted
 
.
 
Count
 $
==
% '
$num
( )
)
) *
return
+ 1
null
2 6
;
6 7
var
 
	pagePosts
 
=
 
await
 !
GetPagePost
" -
(
- .
readTimeSorted
. <
,
< =

pagination
> H
.
H I
Page
I M
,
M N

pagination
O Y
.
Y Z
	PostCount
Z c
)
c d
;
d e
return
 
	pagePosts
 
;
 
}
 	
public
 
async
 
Task
 
<
 
Response
 "
>
" #
LikePost
$ ,
(
, -
Guid
- 1
userId
2 8
,
8 9
Guid
: >
postId
? E
)
E F
{
 	
var
 
post
 
=
 
await
 
_context
 %
.
% &
Post
& *
.
 
Include
 
(
 
e
 
=>
 
e
 
.
  
Likes
  %
)
% &
.
 !
FirstOrDefaultAsync
 $
(
$ %
e
% &
=>
' )
e
* +
.
+ ,
Id
, .
==
/ 1
postId
2 8
)
8 9
;
9 :
var
 
response
 
=
 
new
 
Response
 '
(
' (
)
( )
;
) *
if
 
(
 
post
 
==
 
null
 
)
 
{
 
response
 
.
 
Stasus
 
=
  !
$str
" (
;
( )
response
 
.
 
Message
  
=
! "
$str
# 3
;
3 4
return
 
response
 
;
  
}
 
var
 
user
 
=
 
await
 
_context
 %
.
% &
User
& *
.
 
Include
 
(
 
e
 
=>
 
e
 
.
  
Likes
  %
)
% &
.
 

FirstAsync
 
(
 
e
 
=>
  
e
! "
.
" #
Id
# %
==
& (
userId
) /
)
/ 0
;
0 1
var
 
	LikedPost
 
=
 
user
  
.
  !
Likes
! &
.
& '
FirstOrDefault
' 5
(
5 6
e
6 7
=>
8 :
e
; <
.
< =
PostId
= C
==
D F
postId
G M
)
M N
;
N O
if
¡¡ 
(
¡¡ 
	LikedPost
¡¡ 
!=
¡¡ 
null
¡¡ !
)
¡¡! "
{
¢¢ 
response
££ 
.
££ 
Stasus
££ 
=
££  !
$str
££" (
;
££( )
response
¤¤ 
.
¤¤ 
Message
¤¤  
=
¤¤! "
$str
¤¤# 2
;
¤¤2 3
return
¦¦ 
response
¦¦ 
;
¦¦  
}
§§ 
var
©© 
like
©© 
=
©© 
new
©© 
Like
©© 
{
ªª 
UserId
«« 
=
«« 
userId
«« 
,
««  
PostId
¬¬ 
=
¬¬ 
postId
¬¬ 
,
¬¬  

CreateTime
­­ 
=
­­ 
DateTime
­­ %
.
­­% &
Now
­­& )
,
­­) *
User
®® 
=
®® 
user
®® 
,
®® 
Post
¯¯ 
=
¯¯ 
post
¯¯ 
,
¯¯ 
}
°° 
;
°° 
user
²² 
.
²² 
Likes
²² 
.
²² 
Add
²² 
(
²² 
like
²² 
)
²²  
;
²²  !
post
³³ 
.
³³ 
Likes
³³ 
.
³³ 
Add
³³ 
(
³³ 
like
³³ 
)
³³  
;
³³  !
await
µµ 
_context
µµ 
.
µµ 
SaveChangesAsync
µµ +
(
µµ+ ,
)
µµ, -
;
µµ- .
response
·· 
.
·· 
Stasus
·· 
=
·· 
$str
·· '
;
··' (
response
¸¸ 
.
¸¸ 
Message
¸¸ 
=
¸¸ 
$str
¸¸ 4
;
¸¸4 5
return
ºº 
response
ºº 
;
ºº 
}
»» 	
private
½½ 
static
½½ 
Task
½½ 
<
½½ 
List
½½  
<
½½  !
TagDto
½½! '
>
½½' (
>
½½( )
GetTagDtoList
½½* 7
(
½½7 8
List
½½8 <
<
½½< =
Tag
½½= @
>
½½@ A
tags
½½B F
)
½½F G
{
¾¾ 	
var
¿¿ 
result
¿¿ 
=
¿¿ 
new
¿¿ 
List
¿¿ !
<
¿¿! "
TagDto
¿¿" (
>
¿¿( )
(
¿¿) *
)
¿¿* +
;
¿¿+ ,
foreach
ÁÁ 
(
ÁÁ 
var
ÁÁ 
tag
ÁÁ 
in
ÁÁ 
tags
ÁÁ  $
)
ÁÁ$ %
{
ÂÂ 
result
ÃÃ 
.
ÃÃ 
Add
ÃÃ 
(
ÃÃ 
new
ÃÃ 
TagDto
ÃÃ %
(
ÃÃ% &
)
ÃÃ& '
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ 
tag
ÅÅ 
.
ÅÅ 
Id
ÅÅ 
,
ÅÅ  
Name
ÆÆ 
=
ÆÆ 
tag
ÆÆ 
.
ÆÆ 
Name
ÆÆ #
,
ÆÆ# $

CreateTime
ÇÇ 
=
ÇÇ  
tag
ÇÇ! $
.
ÇÇ$ %
CreatedTime
ÇÇ% 0
}
ÈÈ 
)
ÈÈ 
;
ÈÈ 
}
ÉÉ 
return
ËË 
Task
ËË 
.
ËË 

FromResult
ËË "
(
ËË" #
result
ËË# )
)
ËË) *
;
ËË* +
}
ÌÌ 	
private
ÎÎ 
Task
ÎÎ 
<
ÎÎ 
List
ÎÎ 
<
ÎÎ 
Post
ÎÎ 
>
ÎÎ 
>
ÎÎ  
	SortByTag
ÎÎ! *
(
ÎÎ* +
List
ÎÎ+ /
<
ÎÎ/ 0
Post
ÎÎ0 4
>
ÎÎ4 5
postList
ÎÎ6 >
,
ÎÎ> ?
List
ÎÎ@ D
<
ÎÎD E
Guid
ÎÎE I
>
ÎÎI J
tagGuidList
ÎÎK V
)
ÎÎV W
{
ÏÏ 	
var
ÐÐ 
	tagsCount
ÐÐ 
=
ÐÐ 
tagGuidList
ÐÐ '
.
ÐÐ' (
Count
ÐÐ( -
;
ÐÐ- .
var
ÒÒ 
res
ÒÒ 
=
ÒÒ 
new
ÒÒ 
List
ÒÒ 
<
ÒÒ 
Post
ÒÒ #
>
ÒÒ# $
(
ÒÒ$ %
)
ÒÒ% &
;
ÒÒ& '
foreach
ÔÔ 
(
ÔÔ 
var
ÔÔ 
post
ÔÔ 
in
ÔÔ  
postList
ÔÔ! )
)
ÔÔ) *
{
ÕÕ 
var
ÖÖ 

tagsInPost
ÖÖ 
=
ÖÖ  
post
ÖÖ! %
.
ÖÖ% &
Tags
ÖÖ& *
.
ÖÖ* +
ToArray
ÖÖ+ 2
(
ÖÖ2 3
)
ÖÖ3 4
;
ÖÖ4 5
var
ØØ 
hasTags
ØØ 
=
ØØ 
false
ØØ #
;
ØØ# $
foreach
ÛÛ 
(
ÛÛ 
var
ÛÛ 
tagId
ÛÛ "
in
ÛÛ# %
tagGuidList
ÛÛ& 1
)
ÛÛ1 2
{
ÜÜ 
hasTags
ÝÝ 
=
ÝÝ 

tagsInPost
ÝÝ (
.
ÝÝ( )
Contains
ÝÝ) 1
(
ÝÝ1 2
_context
ÝÝ2 :
.
ÝÝ: ;
Tag
ÝÝ; >
.
ÝÝ> ?
First
ÝÝ? D
(
ÝÝD E
e
ÝÝE F
=>
ÝÝG I
e
ÝÝJ K
.
ÝÝK L
Id
ÝÝL N
==
ÝÝO Q
tagId
ÝÝR W
)
ÝÝW X
)
ÝÝX Y
;
ÝÝY Z
}
ÞÞ 
if
àà 
(
àà 
hasTags
àà 
)
àà 
res
àà  
.
àà  !
Add
àà! $
(
àà$ %
post
àà% )
)
àà) *
;
àà* +
}
áá 
return
ãã 
Task
ãã 
.
ãã 

FromResult
ãã "
(
ãã" #
res
ãã# &
)
ãã& '
;
ãã' (
}
ää 	
private
ææ 
Task
ææ 
<
ææ 
List
ææ 
<
ææ 
Post
ææ 
>
ææ 
>
ææ  

SortSwitch
ææ! +
(
ææ+ ,
Sort
ææ, 0
sort
ææ1 5
)
ææ5 6
=>
ææ7 9
sort
ææ: >
switch
ææ? E
{
çç 	
Sort
èè 
.
èè 
	CreateAsc
èè 
=>
èè 
Task
èè "
.
èè" #

FromResult
èè# -
(
èè- .
_context
èè. 6
.
èè6 7
Post
èè7 ;
.
éé 
Include
éé 
(
éé 
e
éé 
=>
éé 
e
éé 
.
éé  
Tags
éé  $
)
éé$ %
.
êê 
Include
êê 
(
êê 
e
êê 
=>
êê 
e
êê 
.
êê  
Likes
êê  %
)
êê% &
.
ëë 
Include
ëë 
(
ëë 
e
ëë 
=>
ëë 
e
ëë 
.
ëë  
User
ëë  $
)
ëë$ %
.
ìì 
OrderBy
ìì 
(
ìì 
e
ìì 
=>
ìì 
e
ìì 
.
ìì  
Created
ìì  '
)
ìì' (
.
íí 
ToList
íí 
(
íí 
)
íí 
)
íí 
,
íí 
Sort
ïï 
.
ïï 

CreateDesc
ïï 
=>
ïï 
Task
ïï #
.
ïï# $

FromResult
ïï$ .
(
ïï. /
_context
ïï/ 7
.
ïï7 8
Post
ïï8 <
.
ðð 
Include
ðð 
(
ðð 
e
ðð 
=>
ðð 
e
ðð 
.
ðð  
Tags
ðð  $
)
ðð$ %
.
ññ 
Include
ññ 
(
ññ 
e
ññ 
=>
ññ 
e
ññ 
.
ññ  
User
ññ  $
)
ññ$ %
.
òò 
Include
òò 
(
òò 
e
òò 
=>
òò 
e
òò 
.
òò  
Likes
òò  %
)
òò% &
.
óó 
OrderByDescending
óó "
(
óó" #
e
óó# $
=>
óó% '
e
óó( )
.
óó) *
Created
óó* 1
)
óó1 2
.
ôô 
ToList
ôô 
(
ôô 
)
ôô 
)
ôô 
,
ôô 
Sort
öö 
.
öö 
LikeAsc
öö 
=>
öö 
Task
öö  
.
öö  !

FromResult
öö! +
(
öö+ ,
_context
öö, 4
.
öö4 5
Post
öö5 9
.
÷÷ 
Include
÷÷ 
(
÷÷ 
e
÷÷ 
=>
÷÷ 
e
÷÷ 
.
÷÷  
Tags
÷÷  $
)
÷÷$ %
.
øø 
Include
øø 
(
øø 
e
øø 
=>
øø 
e
øø 
.
øø  
Likes
øø  %
)
øø% &
.
ùù 
Include
ùù 
(
ùù 
e
ùù 
=>
ùù 
e
ùù 
.
ùù  
User
ùù  $
)
ùù$ %
.
úú 
OrderBy
úú 
(
úú 
e
úú 
=>
úú 
e
úú 
.
úú  
Likes
úú  %
.
úú% &
Count
úú& +
)
úú+ ,
.
ûû 
ToList
ûû 
(
ûû 
)
ûû 
)
ûû 
,
ûû 
Sort
ýý 
.
ýý 
LikeDesc
ýý 
=>
ýý 
Task
ýý !
.
ýý! "

FromResult
ýý" ,
(
ýý, -
_context
ýý- 5
.
ýý5 6
Post
ýý6 :
.
þþ 
Include
þþ 
(
þþ 
e
þþ 
=>
þþ 
e
þþ 
.
þþ  
Tags
þþ  $
)
þþ$ %
.
ÿÿ 
Include
ÿÿ 
(
ÿÿ 
e
ÿÿ 
=>
ÿÿ 
e
ÿÿ 
.
ÿÿ  
Likes
ÿÿ  %
)
ÿÿ% &
.
 
Include
 
(
 
e
 
=>
 
e
 
.
  
User
  $
)
$ %
.
 
OrderBy
 
(
 
e
 
=>
 
e
 
.
  
Likes
  %
.
% &
Count
& +
)
+ ,
.
 
ToList
 
(
 
)
 
)
 
,
 
_
 
=>
 
throw
 
new
 
ArgumentException
 ,
(
, -
message
- 4
:
4 5
$str
6 O
,
O P
	paramName
Q Z
:
Z [
nameof
\ b
(
b c
sort
c g
)
g h
)
h i
}
 	
;
	 

private
 
Task
 
<
 
List
 
<
 
Post
 
>
 
>
  
ReadTimeSort
! -
(
- .
List
. 2
<
2 3
Post
3 7
>
7 8
postList
9 A
,
A B
int
C F
min
G J
,
J K
int
L O
max
P S
)
S T
{
 	
max
 
=
 
max
 
==
 
$num
 
?
 
int
  
.
  !
MaxValue
! )
:
* +
max
, /
;
/ 0
var
 
orderedList
 
=
 
postList
 &
.
& '
OrderBy
' .
(
. /
e
/ 0
=>
1 3
e
4 5
.
5 6
ReadTime
6 >
)
> ?
;
? @
var
 
res
 
=
 
new
 
List
 
<
 
Post
 #
>
# $
(
$ %
)
% &
;
& '
foreach
 
(
 
var
 
item
 
in
 
orderedList
  +
)
+ ,
{
 
var
 
readTime
 
=
 
item
 #
.
# $
ReadTime
$ ,
;
, -
if
 
(
 
readTime
 
>=
 
min
 "
&&
# %
readTime
& .
<=
/ 1
max
2 5
)
5 6
res
7 :
.
: ;
Add
; >
(
> ?
item
? C
)
C D
;
D E
}
 
return
 
Task
 
.
 

FromResult
 "
(
" #
res
# &
)
& '
;
' (
}
 	
private
 
Task
 
<
 
List
 
<
 
Post
 
>
 
>
  
GetPagePost
! ,
(
, -
List
- 1
<
1 2
Post
2 6
>
6 7
posts
8 =
,
= >
int
? B
page
C G
,
G H
int
I L
postsInPage
M X
)
X Y
{
 	
var
 
	postCount
 
=
 
posts
 !
.
! "
Count
" '
;
' (
var
 

startIndex
 
=
 
(
 
page
 "
-
# $
$num
% &
)
& '
*
( )
postsInPage
* 5
;
5 6
if
 
(
 

startIndex
 
>
 
	postCount
 %
)
% &
return
' -
Task
. 2
.
2 3

FromResult
3 =
(
= >
new
> A
List
B F
<
F G
Post
G K
>
K L
(
L M
)
M N
)
N O
;
O P
var
   
endIndex
   
=
   

startIndex
   %
+
  & '
postsInPage
  ( 3
;
  3 4
if
¢¢ 
(
¢¢ 
endIndex
¢¢ 
>
¢¢ 
	postCount
¢¢ #
)
¢¢# $
endIndex
¢¢% -
=
¢¢. /

startIndex
¢¢0 :
+
¢¢; <
(
¢¢= >
	postCount
¢¢> G
%
¢¢H I
postsInPage
¢¢J U
)
¢¢U V
;
¢¢V W
var
¤¤ 
res
¤¤ 
=
¤¤ 
new
¤¤ 
List
¤¤ 
<
¤¤ 
Post
¤¤ #
>
¤¤# $
(
¤¤$ %
)
¤¤% &
;
¤¤& '
for
¦¦ 
(
¦¦ 
var
¦¦ 
i
¦¦ 
=
¦¦ 

startIndex
¦¦ #
;
¦¦# $
i
¦¦% &
<
¦¦' (
endIndex
¦¦) 1
;
¦¦1 2
i
¦¦3 4
++
¦¦4 6
)
¦¦6 7
{
§§ 
res
¨¨ 
.
¨¨ 
Add
¨¨ 
(
¨¨ 
posts
¨¨ 
[
¨¨ 
i
¨¨ 
]
¨¨  
)
¨¨  !
;
¨¨! "
}
©© 
return
«« 
Task
«« 
.
«« 

FromResult
«« "
(
««" #
res
««# &
)
««& '
;
««' (
}
¬¬ 	
private
®® 
Task
®® 
<
®® 
List
®® 
<
®® 
Post
®® 
>
®® 
>
®®  
SearchByAuthor
®®! /
(
®®/ 0
List
®®0 4
<
®®4 5
Post
®®5 9
>
®®9 :
posts
®®; @
,
®®@ A
string
®®B H
author
®®I O
)
®®O P
=>
®®Q S
Task
®®T X
.
®®X Y

FromResult
®®Y c
(
®®c d
posts
®®d i
.
®®i j
Where
®®j o
(
®®o p
e
®®p q
=>
®®r t
e
®®u v
.
®®v w
User
®®w {
.
®®{ |
FullName®®| 
==®® 
author®® 
)®® 
.®® 
ToList®® 
(®® 
)®® 
)®® 
;®® 
}
¯¯ 
}°° Ü	
RC:\Users\qayum\source\repos\Practice\Practice\Services\PostService\IPostService.cs
	namespace 	
Practice
 
. 
Services 
. 
PostService '
{ 
public 

	interface 
IPostService !
{ 
Task 
< 
List 
< 
PostDto 
> 
? 
> 
GetPostDtoList +
(+ ,

Pagination, 6

pagination7 A
)A B
;B C
Task		 
<		 
PostWithCommentsDto		  
?		  !
>		! "
GetPostDtoById		# 1
(		1 2
Guid		2 6
id		7 9
)		9 :
;		: ;
Task

 
<

 
Response

 
>

 
LikePost

 
(

  
Guid

  $
userId

% +
,

+ ,
Guid

- 1
postId

2 8
)

8 9
;

9 :
Task 
< 
Response 
> 
DisLikePost "
(" #
Guid# '
userId( .
,. /
Guid0 4
postId5 ;
); <
;< =
} 
} 
XC:\Users\qayum\source\repos\Practice\Practice\Services\CommentService\ICommentService.cs
	namespace 	
Practice
 
. 
Services 
. 
CommentService *
{ 
public 

	interface 
ICommentService $
{ 
Task 
< 
List 
< 

CommentDto 
> 
? 
> 
GetComments  +
(+ ,
Guid, 0
id1 3
)3 4
;4 5
Task		 
<		 
Response		 
>		 
CommentPost		 "
(		" #
Guid		# '
postId		( .
,		. /
Guid		0 4
userId		5 ;
,		; <
CommentCreateDto		= M
commentCreateDto		N ^
)		^ _
;		_ `
Task

 
<

 
Response

 
>

 
EditComment

 "
(

" #
Guid

# '
	commentId

( 1
,

1 2
Guid

3 7
userId

8 >
,

> ?
string

@ F

editedText

G Q
)

Q R
;

R S
Task 
< 
Response 
> 
DeleteComment $
($ %
Guid% )
	commentId* 3
,3 4
Guid5 9
userId: @
)@ A
;A B
} 
} ñj
WC:\Users\qayum\source\repos\Practice\Practice\Services\CommentService\CommentService.cs
	namespace 	
Practice
 
. 
Services 
. 
CommentService *
{ 
public		 

class		 
CommentService		 
:		  !
ICommentService		" 1
{

 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
IMapper  
_mapper! (
;( )
public 
CommentService 
( 
AppDbContext *
context+ 2
,2 3
IMapper 
mapper 
) 
{ 	
_context 
= 
context 
; 
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
Response "
>" #
CommentPost$ /
(/ 0
Guid0 4
postId5 ;
,; <
Guid= A
userIdB H
,H I
CommentCreateDtoJ Z
commentCreateDto[ k
)k l
{ 	
var 
comment 
= 
await 
CreateComment  -
(- .
userId. 4
,4 5
postId6 <
,< =
commentCreateDto> N
)N O
;O P
if 
( 
comment 
== 
null 
) 
return  &
new' *
Response+ 3
{4 5
Stasus6 <
== >
$str? E
,E F
MessageG N
=O P
$strQ a
}a b
;b c
await 
_context 
. 
Comment "
." #
AddAsync# +
(+ ,
comment, 3
)3 4
;4 5
if 
( 
Guid 
. 
TryParse 
( 
commentCreateDto .
.. /
ParentId/ 7
,7 8
out9 <
Guid= A

parentGuidB L
)L M
)M N
{ 
var 
parentComment !
=" #
await$ )
_context* 2
.2 3
Comment3 :
.: ;
FirstOrDefaultAsync; N
(N O
eO P
=>Q S
eT U
.U V
IdV X
==Y [

parentGuid\ f
)f g
;g h
if!! 
(!! 
parentComment!! !
!=!!" $
null!!% )
)!!) *
{"" 
var## 
childComment## $
=##% &
await##' ,
CreateChildComment##- ?
(##? @
comment##@ G
,##G H

parentGuid##I S
)##S T
;##T U
if$$ 
($$ 
childComment$$ #
!=$$$ &
null$$' +
)$$+ ,
await$$- 2
_context$$3 ;
.$$; <
ChildComment$$< H
.$$H I
AddAsync$$I Q
($$Q R
childComment$$R ^
)$$^ _
;$$_ `
}%% 
}&& 
await(( 
_context(( 
.(( 
SaveChangesAsync(( +
(((+ ,
)((, -
;((- .
return** 
new** 
Response** 
{**  !
Stasus**" (
=**) *
$str**+ 4
,**4 5
Message**6 =
=**> ?
$str**@ O
}**P Q
;**Q R
}++ 	
public-- 
async-- 
Task-- 
<-- 
Response-- "
>--" #
DeleteComment--$ 1
(--1 2
Guid--2 6
	commentId--7 @
,--@ A
Guid--B F
userId--G M
)--M N
{.. 	
var// 
comment// 
=// 
await// 
_context//  (
.//( )
Comment//) 0
.//0 1
FirstOrDefaultAsync//1 D
(//D E
c//E F
=>//G I
c//J K
.//K L
Id//L N
==//O Q
	commentId//R [
)//[ \
;//\ ]
if11 
(11 
comment11 
==11 
null11 
)11  
return11! '
new11( +
Response11, 4
{115 6
Stasus117 =
=11> ?
$str11@ F
,11F G
Message11H O
=11P Q
$str11R ]
}11^ _
;11_ `
if33 
(33 
comment33 
.33 
UserId33 
!=33 !
userId33" (
)33( )
return33* 0
new331 4
Response335 =
{33> ?
Stasus33@ F
=33G H
$str33I O
,33O P
Message33Q X
=33Y Z
$str33[ m
}33n o
;33o p
comment55 
.55 
DelitedDate55 
=55  !
DateTime55" *
.55* +
UtcNow55+ 1
;551 2
comment66 
.66 

AuthorName66 
=66  
$str66! 4
;664 5
comment77 
.77 
Text77 
=77 
$str77 .
;77. /
await99 
_context99 
.99 
SaveChangesAsync99 +
(99+ ,
)99, -
;99- .
return;; 
new;; 
Response;; 
{;;  !
Stasus;;" (
=;;) *
$str;;+ 4
,;;4 5
Message;;6 =
=;;> ?
$str;;@ P
};;P Q
;;;Q R
}<< 	
public>> 
async>> 
Task>> 
<>> 
Response>> "
>>>" #
EditComment>>$ /
(>>/ 0
Guid>>0 4
	commentId>>5 >
,>>> ?
Guid>>@ D
userId>>E K
,>>K L
string>>M S

editedText>>T ^
)>>^ _
{?? 	
var@@ 
comment@@ 
=@@ 
await@@ 
_context@@  (
.@@( )
Comment@@) 0
.@@0 1
	FindAsync@@1 :
(@@: ;
	commentId@@; D
)@@D E
;@@E F
ifBB 
(BB 
commentBB 
==BB 
nullBB 
)BB  
returnBB! '
newBB( +
ResponseBB, 4
{BB5 6
StasusBB7 =
=BB> ?
$strBB@ F
,BBF G
MessageBBH O
=BBP Q
$strBBR e
}BBf g
;BBg h
varDD 
	isDeletedDD 
=DD 
commentDD #
.DD# $
DelitedDateDD$ /
.DD/ 0
YearDD0 4
!=DD5 7
$numDD8 9
;DD9 :
ifFF 
(FF 
	isDeletedFF 
)FF 
returnFF !
newFF" %
ResponseFF& .
{FF/ 0
StasusFF1 7
=FF8 9
$strFF: @
,FF@ A
MessageFFB I
=FFJ K
$strFFL ]
}FF^ _
;FF_ `
ifHH 
(HH 
commentHH 
.HH 
UserIdHH 
!=HH !
userIdHH" (
)HH( )
returnHH* 0
newHH1 4
ResponseHH5 =
{HH> ?
StasusHH@ F
=HHG H
$strHHI O
,HHO P
MessageHHQ X
=HHY Z
$strHH[ m
}HHn o
;HHo p
commentJJ 
.JJ 
TextJJ 
=JJ 

editedTextJJ %
;JJ% &
commentKK 
.KK 
ModifiedTimeKK  
=KK! "
DateTimeKK# +
.KK+ ,
NowKK, /
;KK/ 0
awaitMM 
_contextMM 
.MM 
SaveChangesAsyncMM +
(MM+ ,
)MM, -
;MM- .
returnOO 
newOO 
ResponseOO 
{OO  !
StasusOO" (
=OO) *
$strOO+ 3
,OO3 4
MessageOO5 <
=OO= >
$strOO? O
}OOP Q
;OOQ R
}PP 	
publicRR 
asyncRR 
TaskRR 
<RR 
ListRR 
<RR 

CommentDtoRR )
>RR) *
?RR* +
>RR+ ,
GetCommentsRR- 8
(RR8 9
GuidRR9 =
idRR> @
)RR@ A
{SS 	
varTT 
commentTT 
=TT 
awaitTT 
_contextTT  (
.TT( )
CommentTT) 0
.UU 
IncludeUU 
(UU 
eUU 
=>UU 
eUU 
.UU  
ChildCommentsUU  -
)UU- .
.VV 
FirstOrDefaultAsyncVV $
(VV$ %
eVV% &
=>VV' )
eVV* +
.VV+ ,
IdVV, .
==VV/ 1
idVV2 4
)VV4 5
;VV5 6
ifXX 
(XX 
commentXX 
==XX 
nullXX 
)XX  
returnXX! '
nullXX( ,
;XX, -
varZZ 
resZZ 
=ZZ 
newZZ 
ListZZ 
<ZZ 

CommentDtoZZ )
>ZZ) *
(ZZ* +
)ZZ+ ,
;ZZ, -
if\\ 
(\\ 
comment\\ 
.\\ 
ChildComments\\ %
!=\\& (
null\\) -
)\\- .
{]] 
foreach^^ 
(^^ 
var^^ 
subCommentId^^ )
in^^* ,
comment^^- 4
.^^4 5
ChildComments^^5 B
)^^B C
{__ 
var`` 

subComment`` "
=``# $
await``% *
_context``+ 3
.``3 4
Comment``4 ;
.``; <
Include``< C
(``C D
e``D E
=>``F H
e``I J
.``J K
ChildComments``K X
)``X Y
.``Y Z

FirstAsync``Z d
(``d e
e``e f
=>``g i
e``j k
.``k l
Id``l n
==``o q
subCommentId``s 
.	`` 
	CommentId
`` 
)
`` 
;
`` 
resbb 
.bb 
Addbb 
(bb 
_mapperbb #
.bb# $
Mapbb$ '
<bb' (

CommentDtobb( 2
>bb2 3
(bb3 4

subCommentbb4 >
)bb> ?
)bb? @
;bb@ A
}cc 
}dd 
returnff 
resff 
;ff 
}gg 	
privateii 
asyncii 
Taskii 
<ii 
Commentii "
?ii" #
>ii# $
CreateCommentii% 2
(ii2 3
Guidii3 7
userIdii8 >
,ii> ?
Guidii@ D
postIdiiE K
,iiK L
CommentCreateDtoiiM ]
commentCreateDtoii^ n
)iin o
{jj 	
varkk 
commentkk 
=kk 
newkk 
Commentkk %
(kk% &
)kk& '
;kk' (
varmm 
postmm 
=mm 
awaitmm 
_contextmm %
.mm% &
Postmm& *
.mm* +
FirstOrDefaultAsyncmm+ >
(mm> ?
emm? @
=>mmA C
emmD E
.mmE F
IdmmF H
==mmI K
postIdmmL R
)mmR S
;mmS T
ifnn 
(nn 
postnn 
==nn 
nullnn 
)nn 
returnnn $
nullnn% )
;nn) *
varpp 
userpp 
=pp 
awaitpp 
_contextpp &
.pp& '
Userpp' +
.pp+ ,

FirstAsyncpp, 6
(pp6 7
epp7 8
=>pp9 ;
epp< =
.pp= >
Idpp> @
==ppA C
userIdppD J
)ppJ K
;ppK L
commentrr 
.rr 
Idrr 
=rr 
Guidrr 
.rr 
NewGuidrr %
(rr% &
)rr& '
;rr' (
commentss 
.ss 
PostIdss 
=ss 
postIdss #
;ss# $
commenttt 
.tt 
Posttt 
=tt 
posttt 
;tt  
commentuu 
.uu 
UserIduu 
=uu 
userIduu #
;uu# $
commentvv 
.vv 
Uservv 
=vv 
uservv 
;vv  
commentww 
.ww 

CreateTimeww 
=ww  
DateTimeww! )
.ww) *
Nowww* -
;ww- .
commentxx 
.xx 
Textxx 
=xx 
commentCreateDtoxx +
.xx+ ,
Commentxx, 3
;xx3 4
commentyy 
.yy 

AuthorNameyy 
=yy  
useryy! %
.yy% &
FullNameyy& .
;yy. /
return{{ 
comment{{ 
;{{ 
}|| 	
private~~ 
Task~~ 
<~~ 
ChildCommentId~~ #
>~~# $
CreateChildComment~~% 7
(~~7 8
Comment~~8 ?
comment~~@ G
,~~G H
Guid~~I M
parentId~~N V
)~~V W
{ 	
return
 
Task
 
.
 

FromResult
 "
(
" #
new
# &
ChildCommentId
' 5
{
6 7
Id
8 :
=
; <
Guid
= A
.
A B
NewGuid
B I
(
I J
)
J K
,
K L
	CommentId
M V
=
W X
comment
Y `
.
` a
Id
a c
,
c d
ParentId
e m
=
n o
parentId
p x
}
y z
)
z {
;
{ |
}
 	
}
 
} ñ

_C:\Users\qayum\source\repos\Practice\Practice\Services\CheckerService\RegisterCheckerService.cs
	namespace 	
Practice
 
. 
Services 
. 
CheckerService *
{ 
public 

class "
RegisterCheckerService '
:( )#
IRegisterCheckerService* A
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
public

 "
RegisterCheckerService

 %
(

% &
AppDbContext

& 2
context

3 :
)

: ;
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
bool 
> 
IsEmailExists  -
(- .
string. 4
login5 :
): ;
{ 	
var 
res 
= 
await 
_context $
.$ %
User% )
.) *
FirstOrDefaultAsync* =
(= >
e> ?
=>@ B
eC D
.D E
EmailE J
==K M
loginN S
)S T
!=U W
nullX \
;\ ]
return 
res 
; 
} 	
} 
} ª
`C:\Users\qayum\source\repos\Practice\Practice\Services\CheckerService\IRegisterCheckerService.cs
	namespace 	
Practice
 
. 
Services 
. 
CheckerService *
{ 
public 

	interface #
IRegisterCheckerService ,
{ 
public 
Task 
< 
bool 
> 
IsEmailExists '
(' (
string( .
login/ 4
)4 5
;5 6
} 
}		 Ä
RC:\Users\qayum\source\repos\Practice\Practice\Services\AuthService\IAuthService.cs
	namespace 	
Practice
 
. 
Services 
. 
AuthService '
{ 
public 

	interface 
IAuthService !
{ 
Task 
< 
string 
> 
Register 
( 
UserRegisterDto -
userRegisterDto. =
)= >
;> ?
Task 
< 
string 
> 
LogIn 
( 
LoginCredentials +
loginCredentials, <
)< =
;= >
Task		 
LogOut		 
(		 
string		 
token		  
)		  !
;		! "
}

 
} ü
pC:\Users\qayum\source\repos\Practice\Practice\Services\CheckerService\ILoginCheckerService\ILoginCheckService.cs
	namespace 	
Practice
 
. 
Services 
. 
CheckerService *
.* + 
ILoginCheckerService+ ?
{ 
public 

	interface 
ILoginCheckService '
{ 
public 
Task 
< 
bool 
> 
IsLoginCorrect (
(( )
LoginCredentials) 9
loginCredentials: J
)J K
;K L
} 
}		 ³
oC:\Users\qayum\source\repos\Practice\Practice\Services\CheckerService\ILoginCheckerService\LoginCheckService.cs
	namespace 	
Practice
 
. 
Services 
. 
CheckerService *
.* + 
ILoginCheckerService+ ?
{ 
public 

class 
LoginCheckService "
:# $
ILoginCheckService% 7
{ 
private		 
readonly		 
AppDbContext		 %
_context		& .
;		. /
public 
LoginCheckService  
(  !
AppDbContext! -
context. 5
)5 6
{ 	
_context 
= 
context 
; 
} 	
public 
async 
Task 
< 
bool 
> 
IsLoginCorrect  .
(. /
LoginCredentials/ ?
loginCredentials@ P
)P Q
{ 	
var 
res 
= 
await 
_context $
.$ %
User% )
.) *

FirstAsync* 4
(4 5
e5 6
=>7 9
e: ;
.; <
Email< A
==B D
loginCredentialsE U
.U V
EmailV [
)[ \
;\ ]
return 
res 
. 
Password 
==  "
loginCredentials# 3
.3 4
Password4 <
;< =
} 	
} 
} ¬"
QC:\Users\qayum\source\repos\Practice\Practice\Services\AuthService\AuthService.cs
	namespace		 	
Practice		
 
.		 
Services		 
.		 
AuthService		 '
{

 
public 

class 
AuthService 
: 
IAuthService +
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
private 
readonly 
IMapper  
_mapper! (
;( )
public 
AuthService 
( 
AppDbContext '
context( /
,/ 0
IUserService 
userService $
,$ %
ITokenService 
tokenService &
,& '
IMapper 
mapper 
) 
{ 	
_context 
= 
context 
; 
_tokenService 
= 
tokenService (
;( )
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
string  
>  !
LogIn" '
(' (
LoginCredentials( 8
loginCredentials9 I
)I J
{ 	
var 
user 
= 
await 
_context %
.% &
User& *
.* +

FirstAsync+ 5
(5 6
e6 7
=>8 :
e; <
.< =
Email= B
==C E
loginCredentialsF V
.V W
EmailW \
)\ ]
;] ^
var 
token 
= 
_tokenService %
.% &
GenerateUserJwt& 5
(5 6
user6 :
): ;
;; <
return!! 
token!! 
;!! 
}"" 	
public$$ 
async$$ 
Task$$ 
LogOut$$  
($$  !
string$$! '
token$$( -
)$$- .
{%% 	
var&& 
res&& 
=&& 
await&& 
_tokenService&& )
.&&) *
GetGuid&&* 1
(&&1 2
token&&2 7
)&&7 8
;&&8 9
var'' 
user'' 
='' 
await'' 
_context'' %
.''% &
User''& *
.''* +

FirstAsync''+ 5
(''5 6
e''6 7
=>''8 :
e''; <
.''< =
Id''= ?
==''@ B
res''C F
)''F G
;''G H
await)) 
_context)) 
.)) 
	UsedToken)) $
.))$ %
AddAsync))% -
())- .
new))/ 2
	UsedToken))3 <
{))= >
Id))@ B
=))C D
Guid))E I
.))I J
NewGuid))J Q
())Q R
)))R S
,))S T
Token))U Z
=))[ \
token))] b
,))b c
User))d h
=))i j
user))k o
}))p q
)))q r
;))r s
await** 
_context** 
.** 
SaveChangesAsync** +
(**+ ,
)**, -
;**- .
}++ 	
public-- 
async-- 
Task-- 
<-- 
string--  
>--  !
Register--" *
(--* +
UserRegisterDto--+ :
userRegisterDto--; J
)--J K
{.. 	
var00 
user00 
=00 
_mapper00 
.00 
Map00 "
<00" #
User00# '
>00' (
(00( )
userRegisterDto00) 8
)008 9
;009 :
_context22 
.22 
User22 
.22 
Add22 
(22 
user22 "
)22" #
;22# $
await44 
_context44 
.44 
SaveChangesAsync44 +
(44+ ,
)44, -
;44- .
var66 
token66 
=66 
_tokenService66 %
.66% &
GenerateUserJwt66& 5
(665 6
user666 :
)66: ;
;66; <
return88 
token88 
;88 
}99 	
}:: 
};; 
VC:\Users\qayum\source\repos\Practice\Practice\Services\AuthorService\IAuthorService.cs
	namespace 	
Practice
 
. 
Services 
. 
AuthorService )
{ 
public 

	interface 
IAuthorService #
{ 
Task 
< 
	AuthorDto 
? 
> 
GetAuthorDto %
(% &
Guid& *
id+ -
)- .
;. /
Task		 
<		 
Response		 
>		 

CreatePost		 !
(		! "
Guid		" &
AuthorId		' /
,		/ 0
PostCreateDto		1 >
postDto		? F
)		F G
;		G H
Task

 
<

 
List

 
<

 
	AuthorDto

 
>

 
>

 
GetAuthorList

 +
(

+ ,
)

, -
;

- .
Task 
< 
Response 
> 
EditPost 
(  
Guid  $
userId% +
,+ ,
PostEditDto- 8
postEditDto9 D
)D E
;E F
Task 
< 
Response 
> 

DeletePost !
(! "
Guid" &
userId' -
,- .
Guid/ 3
postId4 :
): ;
;; <
} 
} Û`
UC:\Users\qayum\source\repos\Practice\Practice\Services\AuthorService\AuthorService.cs
	namespace		 	
Practice		
 
.		 
Services		 
.		 
AuthorService		 )
{

 
public 

class 
AuthorService 
:  
IAuthorService! /
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
ITagService $
_tagService% 0
;0 1
private 
readonly 
IMapper  
_mapper! (
;( )
public 
AuthorService 
( 
AppDbContext )
context* 1
,1 2
ITagService 

tagService "
," #
IMapper 
mapper 
) 
{ 	
_context 
= 
context 
; 
_tagService 
= 

tagService $
;$ %
_mapper 
= 
mapper 
; 
} 	
public 
async 
Task 
< 
	AuthorDto #
?# $
>$ %
GetAuthorDto& 2
(2 3
Guid3 7
id8 :
): ;
{ 	
var 
author 
= 
await 
_context '
.' (
User( ,
. 
Include 
( 
e 
=> 
e 
.  
Posts  %
)% &
. 
Include 
( 
e 
=> 
e 
.  
Likes  %
)% &
. 
FirstOrDefaultAsync $
($ %
e% &
=>' )
e* +
.+ ,
Id, .
==/ 1
id2 4
)4 5
;5 6
if!! 
(!! 
author!! 
==!! 
null!! 
||!! !
!!!" #
author!!# )
.!!) *
IsAuthor!!* 2
)!!2 3
return!!4 :
null!!; ?
;!!? @
var## 
	authorDto## 
=## 
_mapper## #
.### $
Map##$ '
<##' (
	AuthorDto##( 1
>##1 2
(##2 3
author##3 9
)##9 :
;##: ;
return%% 
	authorDto%% 
;%% 
}&& 	
public(( 
async(( 
Task(( 
<(( 
Response(( "
>((" #

CreatePost(($ .
(((. /
Guid((/ 3
AuthorId((4 <
,((< =
PostCreateDto((> K
postDto((L S
)((S T
{)) 	
var** 
user** 
=** 
await** 
_context** %
.**% &
User**& *
.++ 
Include++ 
(++ 
e++ 
=>++ 
e++ 
.++  
Posts++  %
)++% &
.,, 

FirstAsync,, 
(,, 
e,, 
=>,,  
e,,! "
.,," #
Id,,# %
==,,& (
AuthorId,,) 1
),,1 2
;,,2 3
var.. 
tagList.. 
=.. 
await.. 
_tagService..  +
...+ ,
GetTagListByIdList.., >
(..> ?
postDto..? F
...F G
TagGuidList..G R
)..R S
;..S T
var00 
post00 
=00 
_mapper00 
.00 
Map00 "
<00" #
Post00# '
>00' (
(00( )
postDto00) 0
)000 1
;001 2
post22 
.22 
Tags22 
=22 
tagList22 
;22  
post33 
.33 
User33 
=33 
user33 
;33 
post44 
.44 
UserId44 
=44 
user44 
.44 
Id44 !
;44! "
if66 
(66 
!66 
user66 
.66 
IsAuthor66 
)66 
user77 
.77 
IsAuthor77 
=77 
true77  $
;77$ %
await99 
_context99 
.99 
Post99 
.99  
AddAsync99  (
(99( )
post99) -
)99- .
;99. /
_context;; 
.;; 
User;; 
.;; 
OrderBy;; !
(;;! "
e;;" #
=>;;$ &
e;;' (
.;;( )
Posts;;) .
.;;. /
Count;;/ 4
);;4 5
;;;5 6
await== 
_context== 
.== 
SaveChangesAsync== +
(==+ ,
)==, -
;==- .
var?? 
responce?? 
=?? 
new?? 
Response?? '
(??' (
)??( )
{@@ 
StasusAA 
=AA 
$strAA "
,AA" #
MessageBB 
=BB 
$"BB 
$strBB )
{BB) *
postDtoBB* 1
.BB1 2
TitleBB2 7
}BB7 8
"BB8 9
}CC 
;CC 
returnEE 
responceEE 
;EE 
}FF 	
publicHH 
TaskHH 
<HH 
ListHH 
<HH 
	AuthorDtoHH "
>HH" #
>HH# $
GetAuthorListHH% 2
(HH2 3
)HH3 4
{II 	
varJJ 

authorListJJ 
=JJ 
_contextJJ %
.JJ% &
UserJJ& *
.KK 
IncludeKK 
(KK 
eKK 
=>KK 
eKK 
.KK  
PostsKK  %
)KK% &
.LL 
IncludeLL 
(LL 
eLL 
=>LL 
eLL 
.LL  
LikesLL  %
)LL% &
.MM 
WhereMM 
(MM 
UserMM 
=>MM 
UserMM #
.MM# $
IsAuthorMM$ ,
==MM- /
trueMM0 4
)MM4 5
.NN 
ToListNN 
(NN 
)NN 
;NN 
varPP 
authorDtoListPP 
=PP 
newPP  #
ListPP$ (
<PP( )
	AuthorDtoPP) 2
>PP2 3
(PP3 4
)PP4 5
;PP5 6
foreachRR 
(RR 
varRR 
authorRR 
inRR !

authorListRR" ,
)RR, -
{SS 
varTT 
	authorDtoTT 
=TT 
_mapperTT  '
.TT' (
MapTT( +
<TT+ ,
	AuthorDtoTT, 5
>TT5 6
(TT6 7
authorTT7 =
)TT= >
;TT> ?
authorDtoListVV 
.VV 
AddVV !
(VV! "
	authorDtoVV" +
)VV+ ,
;VV, -
}WW 
returnYY 
TaskYY 
.YY 

FromResultYY "
(YY" #
authorDtoListYY# 0
)YY0 1
;YY1 2
}ZZ 	
public\\ 
async\\ 
Task\\ 
<\\ 
Response\\ "
>\\" #

DeletePost\\$ .
(\\. /
Guid\\/ 3
userId\\4 :
,\\: ;
Guid\\< @
postId\\A G
)\\G H
{]] 	
var^^ 
post^^ 
=^^ 
await^^ 
_context^^ %
.^^% &
Post^^& *
.^^* +

FirstAsync^^+ 5
(^^5 6
e^^6 7
=>^^8 :
e^^; <
.^^< =
Id^^= ?
==^^@ B
postId^^C I
)^^I J
;^^J K
var`` 
respose`` 
=`` 
new`` 
Response`` &
(``& '
)``' (
;``( )
ifbb 
(bb 
postbb 
.bb 
UserIdbb 
!=bb 
userIdbb $
)bb$ %
{cc 
resposedd 
.dd 
Stasusdd 
=dd  
$strdd! 5
;dd5 6
resposeee 
.ee 
Messageee 
=ee  !
$stree" C
;eeC D
returngg 
resposegg 
;gg 
}hh 
_contextjj 
.jj 
Postjj 
.jj 
Removejj  
(jj  !
postjj! %
)jj% &
;jj& '
awaitll 
_contextll 
.ll 
SaveChangesAsyncll +
(ll+ ,
)ll, -
;ll- .
resposenn 
.nn 
Stasusnn 
=nn 
$strnn &
;nn& '
resposeoo 
.oo 
Messageoo 
=oo 
$stroo 5
;oo5 6
returnqq 
resposeqq 
;qq 
}rr 	
publictt 
asynctt 
Tasktt 
<tt 
Responsett "
>tt" #
EditPosttt$ ,
(tt, -
Guidtt- 1
userIdtt2 8
,tt8 9
PostEditDtott: E
postEditDtottF Q
)ttQ R
{uu 	
varvv 
postvv 
=vv 
awaitvv 
_contextvv %
.vv% &
Postvv& *
.ww 
Includeww 
(ww 
eww 
=>ww 
eww 
.ww  
Tagsww  $
)ww$ %
.xx 

FirstAsyncxx 
(xx 
exx 
=>xx  
exx! "
.xx" #
Idxx# %
==xx& (
postEditDtoxx) 4
.xx4 5
PostIdxx5 ;
)xx; <
;xx< =
varzz 
resposezz 
=zz 
newzz 
Responsezz &
(zz& '
)zz' (
;zz( )
if|| 
(|| 
post|| 
.|| 
UserId|| 
!=|| 
userId|| %
)||% &
{}} 
respose~~ 
.~~ 
Stasus~~ 
=~~  
$str~~! 4
;~~4 5
respose 
. 
Message 
=  !
$str" C
;C D
return
 
respose
 
;
 
}
 
post
 
.
 
Title
 
=
 
string
 
.
  
IsNullOrEmpty
  -
(
- .
postEditDto
. 9
.
9 :
Title
: ?
)
? @
?
A B
post
C G
.
G H
Title
H M
:
N O
postEditDto
P [
.
[ \
Title
\ a
;
a b
post
 
.
 
Text
 
=
 
string
 
.
 
IsNullOrEmpty
 ,
(
, -
postEditDto
- 8
.
8 9
Text
9 =
)
= >
?
? @
post
A E
.
E F
Text
F J
:
K L
postEditDto
M X
.
X Y
Text
Y ]
;
] ^
post
 
.
 
ReadTime
 
=
 
postEditDto
 '
.
' (
ReadTime
( 0
==
1 3
$num
4 5
?
6 7
post
8 <
.
< =
ReadTime
= E
:
F G
postEditDto
H S
.
S T
ReadTime
T \
;
\ ]
await
 
_tagService
 
.
 
AddTagsToPost
 +
(
+ ,
post
, 0
,
0 1
postEditDto
2 =
.
= >
AddTagGuidList
> L
)
L M
;
M N
await
 
_tagService
 
.
  
DeleteTagsFromPost
 0
(
0 1
post
1 5
,
5 6
postEditDto
7 B
.
B C
DeleteTagGuidList
C T
)
T U
;
U V
await
 
_context
 
.
 
SaveChangesAsync
 +
(
+ ,
)
, -
;
- .
respose
 
.
 
Stasus
 
=
 
$str
 &
;
& '
respose
 
.
 
Message
 
=
 
$str
 4
;
4 5
return
 
respose
 
;
 
}
 	
}
 
} ÐL
8C:\Users\qayum\source\repos\Practice\Practice\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddCors 
( 
options  
=>! #
{ 
options 
. 
AddDefaultPolicy 
( 
policy 
=> 
policy 
. 
AllowAnyOrigin '
(' (
)( )
. 
AllowAnyHeader 
( 
) 
. 
AllowAnyMethod 
( 
) 
) 
; 
} 
) 
; 
builder## 
.## 
Services## 
.## 
AddControllers## 
(##  
)##  !
;##! "
builder&& 
.&& 
Services&& 
.&& -
!AddFluentValidationAutoValidation&& 2
(&&2 3
)&&3 4
;&&4 5
builder'' 
.'' 
Services'' 
.'' %
AddValidatorsFromAssembly'' *
(''* +
Assembly''+ 3
.''3 4 
GetExecutingAssembly''4 H
(''H I
)''I J
)''J K
;''K L
builder(( 
.(( 
Services(( 
.(( -
!AddFluentValidationRulesToSwagger(( 2
(((2 3
)((3 4
;((4 5
builder++ 
.++ 
Services++ 
.++ 
AddSwaggerGen++ 
(++ 
e++  
=>++! #
{,, 
e-- 
.-- 

SwaggerDoc-- 
(-- 
$str-- 
,-- 
new-- 
OpenApiInfo-- &
{--' (
Title--) .
=--/ 0
$str--1 ;
,--; <
Version--= D
=--E F
$str--G K
}--L M
)--M N
;--N O
var// 
filePath// 
=// 
Path// 
.// 
Combine// 
(//  

AppContext//  *
.//* +
BaseDirectory//+ 8
,//9 :
$str//; I
)//I J
;//J K
e00 
.00 
IncludeXmlComments00 
(00 
filePath00 !
)00! "
;00" #
e22 
.22 !
AddSecurityDefinition22 
(22 
$str22 $
,22$ %
new22& )!
OpenApiSecurityScheme22* ?
{33 
In44 

=44 
ParameterLocation44 
.44 
Header44 %
,44% &
Description55 
=55 
$str55 *
,55* +
Name66 
=66 
$str66 
,66 
Type77 
=77 
SecuritySchemeType77 !
.77! "
Http77" &
,77& '
BearerFormat88 
=88 
$str88 
,88 
Scheme99 
=99 
$str99 
}:: 
):: 
;:: 
e;; 
.;; "
AddSecurityRequirement;; 
(;; 
new;;  &
OpenApiSecurityRequirement;;! ;
{<< 
{== 	
new>> !
OpenApiSecurityScheme>> %
{?? 
	Reference@@ 
=@@ 
new@@ 
OpenApiReference@@  0
{AA 
TypeBB 
=BB 
ReferenceTypeBB &
.BB& '
SecuritySchemeBB' 5
,BB5 6
IdCC 
=CC 
$strCC 
}DD 
}EE 
,EE 
newFF 
stringFF 
[FF 
]FF 
{FF 
}FF 
}GG 	
}HH 
)HH 
;HH 
}II 
)II 
;II 
builderLL 
.LL 
ServicesLL 
.LL 
AddAutoMapperLL 
(LL 
cfgLL "
=>LL# %
{MM 
cfgNN 
.NN 

AddProfileNN 
<NN 
	AppMapperNN 
>NN 
(NN 
)NN 
;NN  
}OO 
)OO 
;OO 
builderRR 
.RR 
ServicesRR 
.RR #
AddEndpointsApiExplorerRR (
(RR( )
)RR) *
;RR* +
varUU 

connectionUU 
=UU 
builderUU 
.UU 
ConfigurationUU &
[UU& '
$strUU' K
]UUK L
;UUL M
builderVV 
.VV 
ServicesVV 
.VV 
AddDbContextVV 
<VV 
AppDbContextVV *
>VV* +
(VV+ ,
optionVV, 2
=>VV3 5
optionVV6 <
.VV< =
UseSqlServerVV= I
(VVI J

connectionVVJ T
)VVT U
)VVU V
;VVV W
builderZZ 
.ZZ 
ServicesZZ 
.ZZ 
	AddScopedZZ 
<ZZ 
IAuthServiceZZ '
,ZZ' (
AuthServiceZZ) 4
>ZZ4 5
(ZZ5 6
)ZZ6 7
;ZZ7 8
builder[[ 
.[[ 
Services[[ 
.[[ 
	AddScoped[[ 
<[[ #
IRegisterCheckerService[[ 2
,[[2 3"
RegisterCheckerService[[4 J
>[[J K
([[K L
)[[L M
;[[M N
builder\\ 
.\\ 
Services\\ 
.\\ 
	AddScoped\\ 
<\\ 
ILoginCheckService\\ -
,\\- .
LoginCheckService\\/ @
>\\@ A
(\\A B
)\\B C
;\\C D
builder]] 
.]] 
Services]] 
.]] 
	AddScoped]] 
<]] 
ITokenService]] (
,]]( )
TokenService]]* 6
>]]6 7
(]]7 8
)]]8 9
;]]9 :
builder^^ 
.^^ 
Services^^ 
.^^ 
	AddScoped^^ 
<^^ 
IUserService^^ '
,^^' (
UserService^^) 4
>^^4 5
(^^5 6
)^^6 7
;^^7 8
builder__ 
.__ 
Services__ 
.__ 
	AddScoped__ 
<__ 
ITagService__ &
,__& '

TagService__( 2
>__2 3
(__3 4
)__4 5
;__5 6
builder`` 
.`` 
Services`` 
.`` 
	AddScoped`` 
<`` 
IAuthorService`` )
,``) *
AuthorService``+ 8
>``8 9
(``9 :
)``: ;
;``; <
builderaa 
.aa 
Servicesaa 
.aa 
	AddScopedaa 
<aa 
IPostServiceaa '
,aa' (
PostServiceaa) 4
>aa4 5
(aa5 6
)aa6 7
;aa7 8
builderbb 
.bb 
Servicesbb 
.bb 
	AddScopedbb 
<bb 
ICommentServicebb *
,bb* +
CommentServicebb, :
>bb: ;
(bb; <
)bb< =
;bb= >
builderff 
.ff 
Servicesff 
.ff 
AddAuthenticationff "
(ff" #
JwtBearerDefaultsff# 4
.ff4 5 
AuthenticationSchemeff5 I
)ffI J
.ffJ K
AddJwtBearerffK W
(ffW X
optionffX ^
=>ff_ a
optiongg 

.gg
 %
TokenValidationParametersgg $
=gg% &
newgg' *%
TokenValidationParametersgg+ D
{hh 
ValidateIssuerii 
=ii 
trueii 
,ii 
ValidateAudiencejj 
=jj 
truejj 
,jj  
ValidateLifetimekk 
=kk 
truekk 
,kk  $
ValidateIssuerSigningKeyll  
=ll! "
truell# '
,ll' (
ValidIssuermm 
=mm 
buildermm 
.mm 
Configurationmm +
[mm+ ,
$strmm, 8
]mm8 9
,mm9 :
ValidAudiencenn 
=nn 
buildernn 
.nn  
Configurationnn  -
[nn- .
$strnn. <
]nn< =
,nn= >
IssuerSigningKeyoo 
=oo 
newoo  
SymmetricSecurityKeyoo 3
(oo3 4
Encodingoo4 <
.oo< =
ASCIIoo= B
.ooB C
GetBytesooC K
(ooK L
builderooL S
.ooS T
ConfigurationooT a
[ooa b
$stroob k
]ook l
)ool m
)oom n
}pp 
)pp 
;pp 
varrr 
apprr 
=rr 	
builderrr
 
.rr 
Buildrr 
(rr 
)rr 
;rr 
ifuu 
(uu 
appuu 
.uu 
Environmentuu 
.uu 
IsDevelopmentuu !
(uu! "
)uu" #
)uu# $
{vv 
appww 
.ww 

UseSwaggerww 
(ww 
)ww 
;ww 
appxx 
.xx 
UseSwaggerUIxx 
(xx 
exx 
=>xx 
{yy 
ezz 	
.zz	 

SwaggerEndpointzz
 
(zz 
$strzz +
,zz+ ,
$strzz- 1
)zz1 2
;zz2 3
}{{ 
){{ 
;{{ 
}|| 
app~~ 
.~~ 
UseHttpsRedirection~~ 
(~~ 
)~~ 
;~~ 
app 
.
 
UseAuthorization
 
(
 
)
 
;
 
app 
.
 
MapControllers
 
(
 
)
 
;
 
app 
.
 
Run
 
(
 
)
 	
;
	 
Ûä
OC:\Users\qayum\source\repos\Practice\Practice\Migrations\20230913094422_Init.cs
	namespace 	
Practice
 
. 

Migrations 
{ 
public		 

partial		 
class		 
Init		 
:		 
	Migration		  )
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
CreatedTime 
=  !
table" '
.' (
Column( .
<. /
DateTime/ 7
>7 8
(8 9
type9 =
:= >
$str? J
,J K
nullableL T
:T U
falseV [
)[ \
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% -
,- .
x/ 0
=>1 3
x4 5
.5 6
Id6 8
)8 9
;9 :
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 D
,D E
nullableF N
:N O
falseP U
)U V
,V W
FullName   
=   
table   $
.  $ %
Column  % +
<  + ,
string  , 2
>  2 3
(  3 4
type  4 8
:  8 9
$str  : I
,  I J
nullable  K S
:  S T
false  U Z
)  Z [
,  [ \
BirthDay!! 
=!! 
table!! $
.!!$ %
Column!!% +
<!!+ ,
DateTime!!, 4
>!!4 5
(!!5 6
type!!6 :
:!!: ;
$str!!< G
,!!G H
nullable!!I Q
:!!Q R
false!!S X
)!!X Y
,!!Y Z
Created"" 
="" 
table"" #
.""# $
Column""$ *
<""* +
DateTime""+ 3
>""3 4
(""4 5
type""5 9
:""9 :
$str""; F
,""F G
nullable""H P
:""P Q
false""R W
)""W X
,""X Y
Gender## 
=## 
table## "
.##" #
Column### )
<##) *
int##* -
>##- .
(##. /
type##/ 3
:##3 4
$str##5 :
,##: ;
nullable##< D
:##D E
false##F K
)##K L
,##L M
PhoneNumber$$ 
=$$  !
table$$" '
.$$' (
Column$$( .
<$$. /
string$$/ 5
>$$5 6
($$6 7
type$$7 ;
:$$; <
$str$$= L
,$$L M
nullable$$N V
:$$V W
false$$X ]
)$$] ^
,$$^ _
Email%% 
=%% 
table%% !
.%%! "
Column%%" (
<%%( )
string%%) /
>%%/ 0
(%%0 1
type%%1 5
:%%5 6
$str%%7 F
,%%F G
nullable%%H P
:%%P Q
false%%R W
)%%W X
,%%X Y
Password&& 
=&& 
table&& $
.&&$ %
Column&&% +
<&&+ ,
string&&, 2
>&&2 3
(&&3 4
type&&4 8
:&&8 9
$str&&: I
,&&I J
nullable&&K S
:&&S T
false&&U Z
)&&Z [
,&&[ \
IsAuthor'' 
='' 
table'' $
.''$ %
Column''% +
<''+ ,
bool'', 0
>''0 1
(''1 2
type''2 6
:''6 7
$str''8 =
,''= >
nullable''? G
:''G H
false''I N
)''N O
}(( 
,(( 
constraints)) 
:)) 
table)) "
=>))# %
{** 
table++ 
.++ 

PrimaryKey++ $
(++$ %
$str++% .
,++. /
x++0 1
=>++2 4
x++5 6
.++6 7
Id++7 9
)++9 :
;++: ;
},, 
),, 
;,, 
migrationBuilder.. 
... 
CreateTable.. (
(..( )
name// 
:// 
$str// 
,// 
columns00 
:00 
table00 
=>00 !
new00" %
{11 
Id22 
=22 
table22 
.22 
Column22 %
<22% &
Guid22& *
>22* +
(22+ ,
type22, 0
:220 1
$str222 D
,22D E
nullable22F N
:22N O
false22P U
)22U V
,22V W
Title33 
=33 
table33 !
.33! "
Column33" (
<33( )
string33) /
>33/ 0
(330 1
type331 5
:335 6
$str337 F
,33F G
nullable33H P
:33P Q
false33R W
)33W X
,33X Y
Text44 
=44 
table44  
.44  !
Column44! '
<44' (
string44( .
>44. /
(44/ 0
type440 4
:444 5
$str446 E
,44E F
nullable44G O
:44O P
false44Q V
)44V W
,44W X
ReadTime55 
=55 
table55 $
.55$ %
Column55% +
<55+ ,
int55, /
>55/ 0
(550 1
type551 5
:555 6
$str557 <
,55< =
nullable55> F
:55F G
false55H M
)55M N
,55N O
Created66 
=66 
table66 #
.66# $
Column66$ *
<66* +
DateTime66+ 3
>663 4
(664 5
type665 9
:669 :
$str66; F
,66F G
nullable66H P
:66P Q
false66R W
)66W X
,66X Y
UserId77 
=77 
table77 "
.77" #
Column77# )
<77) *
Guid77* .
>77. /
(77/ 0
type770 4
:774 5
$str776 H
,77H I
nullable77J R
:77R S
false77T Y
)77Y Z
,77Z [
HasLIke88 
=88 
table88 #
.88# $
Column88$ *
<88* +
bool88+ /
>88/ 0
(880 1
type881 5
:885 6
$str887 <
,88< =
nullable88> F
:88F G
false88H M
)88M N
,88N O
CommentsConunt99 "
=99# $
table99% *
.99* +
Column99+ 1
<991 2
int992 5
>995 6
(996 7
type997 ;
:99; <
$str99= B
,99B C
nullable99D L
:99L M
false99N S
)99S T
}:: 
,:: 
constraints;; 
:;; 
table;; "
=>;;# %
{<< 
table== 
.== 

PrimaryKey== $
(==$ %
$str==% .
,==. /
x==0 1
=>==2 4
x==5 6
.==6 7
Id==7 9
)==9 :
;==: ;
table>> 
.>> 

ForeignKey>> $
(>>$ %
name?? 
:?? 
$str?? 3
,??3 4
column@@ 
:@@ 
x@@  !
=>@@" $
x@@% &
.@@& '
UserId@@' -
,@@- .
principalTableAA &
:AA& '
$strAA( .
,AA. /
principalColumnBB '
:BB' (
$strBB) -
)BB- .
;BB. /
}CC 
)CC 
;CC 
migrationBuilderEE 
.EE 
CreateTableEE (
(EE( )
nameFF 
:FF 
$strFF !
,FF! "
columnsGG 
:GG 
tableGG 
=>GG !
newGG" %
{HH 
IdII 
=II 
tableII 
.II 
ColumnII %
<II% &
GuidII& *
>II* +
(II+ ,
typeII, 0
:II0 1
$strII2 D
,IID E
nullableIIF N
:IIN O
falseIIP U
)IIU V
,IIV W
TokenJJ 
=JJ 
tableJJ !
.JJ! "
ColumnJJ" (
<JJ( )
stringJJ) /
>JJ/ 0
(JJ0 1
typeJJ1 5
:JJ5 6
$strJJ7 F
,JJF G
nullableJJH P
:JJP Q
falseJJR W
)JJW X
,JJX Y
UserIdKK 
=KK 
tableKK "
.KK" #
ColumnKK# )
<KK) *
GuidKK* .
>KK. /
(KK/ 0
typeKK0 4
:KK4 5
$strKK6 H
,KKH I
nullableKKJ R
:KKR S
falseKKT Y
)KKY Z
}LL 
,LL 
constraintsMM 
:MM 
tableMM "
=>MM# %
{NN 
tableOO 
.OO 

PrimaryKeyOO $
(OO$ %
$strOO% 3
,OO3 4
xOO5 6
=>OO7 9
xOO: ;
.OO; <
IdOO< >
)OO> ?
;OO? @
tablePP 
.PP 

ForeignKeyPP $
(PP$ %
nameQQ 
:QQ 
$strQQ 8
,QQ8 9
columnRR 
:RR 
xRR  !
=>RR" $
xRR% &
.RR& '
UserIdRR' -
,RR- .
principalTableSS &
:SS& '
$strSS( .
,SS. /
principalColumnTT '
:TT' (
$strTT) -
,TT- .
onDeleteUU  
:UU  !
ReferentialActionUU" 3
.UU3 4
CascadeUU4 ;
)UU; <
;UU< =
}VV 
)VV 
;VV 
migrationBuilderXX 
.XX 
CreateTableXX (
(XX( )
nameYY 
:YY 
$strYY 
,YY  
columnsZZ 
:ZZ 
tableZZ 
=>ZZ !
newZZ" %
{[[ 
Id\\ 
=\\ 
table\\ 
.\\ 
Column\\ %
<\\% &
Guid\\& *
>\\* +
(\\+ ,
type\\, 0
:\\0 1
$str\\2 D
,\\D E
nullable\\F N
:\\N O
false\\P U
)\\U V
,\\V W

CreateTime]] 
=]]  
table]]! &
.]]& '
Column]]' -
<]]- .
DateTime]]. 6
>]]6 7
(]]7 8
type]]8 <
:]]< =
$str]]> I
,]]I J
nullable]]K S
:]]S T
false]]U Z
)]]Z [
,]][ \
ModifiedTime^^  
=^^! "
table^^# (
.^^( )
Column^^) /
<^^/ 0
DateTime^^0 8
>^^8 9
(^^9 :
type^^: >
:^^> ?
$str^^@ K
,^^K L
nullable^^M U
:^^U V
false^^W \
)^^\ ]
,^^] ^
DelitedDate__ 
=__  !
table__" '
.__' (
Column__( .
<__. /
DateTime__/ 7
>__7 8
(__8 9
type__9 =
:__= >
$str__? J
,__J K
nullable__L T
:__T U
false__V [
)__[ \
,__\ ]
Text`` 
=`` 
table``  
.``  !
Column``! '
<``' (
string``( .
>``. /
(``/ 0
type``0 4
:``4 5
$str``6 E
,``E F
nullable``G O
:``O P
false``Q V
)``V W
,``W X
UserIdaa 
=aa 
tableaa "
.aa" #
Columnaa# )
<aa) *
Guidaa* .
>aa. /
(aa/ 0
typeaa0 4
:aa4 5
$straa6 H
,aaH I
nullableaaJ R
:aaR S
falseaaT Y
)aaY Z
,aaZ [

AuthorNamebb 
=bb  
tablebb! &
.bb& '
Columnbb' -
<bb- .
stringbb. 4
>bb4 5
(bb5 6
typebb6 :
:bb: ;
$strbb< K
,bbK L
nullablebbM U
:bbU V
falsebbW \
)bb\ ]
,bb] ^
ParentCommentIdcc #
=cc$ %
tablecc& +
.cc+ ,
Columncc, 2
<cc2 3
Guidcc3 7
>cc7 8
(cc8 9
typecc9 =
:cc= >
$strcc? Q
,ccQ R
nullableccS [
:cc[ \
truecc] a
)cca b
,ccb c
PostIddd 
=dd 
tabledd "
.dd" #
Columndd# )
<dd) *
Guiddd* .
>dd. /
(dd/ 0
typedd0 4
:dd4 5
$strdd6 H
,ddH I
nullableddJ R
:ddR S
falseddT Y
)ddY Z
}ee 
,ee 
constraintsff 
:ff 
tableff "
=>ff# %
{gg 
tablehh 
.hh 

PrimaryKeyhh $
(hh$ %
$strhh% 1
,hh1 2
xhh3 4
=>hh5 7
xhh8 9
.hh9 :
Idhh: <
)hh< =
;hh= >
tableii 
.ii 

ForeignKeyii $
(ii$ %
namejj 
:jj 
$strjj 6
,jj6 7
columnkk 
:kk 
xkk  !
=>kk" $
xkk% &
.kk& '
PostIdkk' -
,kk- .
principalTablell &
:ll& '
$strll( .
,ll. /
principalColumnmm '
:mm' (
$strmm) -
,mm- .
onDeletenn  
:nn  !
ReferentialActionnn" 3
.nn3 4
Cascadenn4 ;
)nn; <
;nn< =
tableoo 
.oo 

ForeignKeyoo $
(oo$ %
namepp 
:pp 
$strpp 6
,pp6 7
columnqq 
:qq 
xqq  !
=>qq" $
xqq% &
.qq& '
UserIdqq' -
,qq- .
principalTablerr &
:rr& '
$strrr( .
,rr. /
principalColumnss '
:ss' (
$strss) -
)ss- .
;ss. /
}tt 
)tt 
;tt 
migrationBuildervv 
.vv 
CreateTablevv (
(vv( )
nameww 
:ww 
$strww 
,ww 
columnsxx 
:xx 
tablexx 
=>xx !
newxx" %
{yy 
Idzz 
=zz 
tablezz 
.zz 
Columnzz %
<zz% &
Guidzz& *
>zz* +
(zz+ ,
typezz, 0
:zz0 1
$strzz2 D
,zzD E
nullablezzF N
:zzN O
falsezzP U
)zzU V
,zzV W

CreateTime{{ 
={{  
table{{! &
.{{& '
Column{{' -
<{{- .
DateTime{{. 6
>{{6 7
({{7 8
type{{8 <
:{{< =
$str{{> I
,{{I J
nullable{{K S
:{{S T
false{{U Z
){{Z [
,{{[ \

DeliteTime|| 
=||  
table||! &
.||& '
Column||' -
<||- .
DateTime||. 6
>||6 7
(||7 8
type||8 <
:||< =
$str||> I
,||I J
nullable||K S
:||S T
false||U Z
)||Z [
,||[ \
UserId}} 
=}} 
table}} "
.}}" #
Column}}# )
<}}) *
Guid}}* .
>}}. /
(}}/ 0
type}}0 4
:}}4 5
$str}}6 H
,}}H I
nullable}}J R
:}}R S
false}}T Y
)}}Y Z
,}}Z [
PostId~~ 
=~~ 
table~~ "
.~~" #
Column~~# )
<~~) *
Guid~~* .
>~~. /
(~~/ 0
type~~0 4
:~~4 5
$str~~6 H
,~~H I
nullable~~J R
:~~R S
false~~T Y
)~~Y Z
,~~Z [
PostId1 
= 
table #
.# $
Column$ *
<* +
Guid+ /
>/ 0
(0 1
type1 5
:5 6
$str7 I
,I J
nullableK S
:S T
trueU Y
)Y Z
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% .
,
. /
x
0 1
=>
2 4
x
5 6
.
6 7
Id
7 9
)
9 :
;
: ;
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 3
,
3 4
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
PostId
' -
,
- .
principalTable
 &
:
& '
$str
( .
,
. /
principalColumn
 '
:
' (
$str
) -
,
- .
onDelete
  
:
  !
ReferentialAction
" 3
.
3 4
Cascade
4 ;
)
; <
;
< =
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 4
,
4 5
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
PostId1
' .
,
. /
principalTable
 &
:
& '
$str
( .
,
. /
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
table
 
.
 

ForeignKey
 $
(
$ %
name
 
:
 
$str
 3
,
3 4
column
 
:
 
x
  !
=>
" $
x
% &
.
& '
UserId
' -
,
- .
principalTable
 &
:
& '
$str
( .
,
. /
principalColumn
 '
:
' (
$str
) -
)
- .
;
. /
}
 
)
 
;
 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
 
:
 
$str
 
,
  
columns
 
:
 
table
 
=>
 !
new
" %
{
 
PostsId
 
=
 
table
 #
.
# $
Column
$ *
<
* +
Guid
+ /
>
/ 0
(
0 1
type
1 5
:
5 6
$str
7 I
,
I J
nullable
K S
:
S T
false
U Z
)
Z [
,
[ \
TagsId
 
=
 
table
 "
.
" #
Column
# )
<
) *
Guid
* .
>
. /
(
/ 0
type
0 4
:
4 5
$str
6 H
,
H I
nullable
J R
:
R S
false
T Y
)
Y Z
}
 
,
 
constraints
 
:
 
table
 "
=>
# %
{
 
table
 
.
 

PrimaryKey
 $
(
$ %
$str
% 1
,
1 2
x
3 4
=>
5 7
new
8 ;
{
< =
x
> ?
.
? @
PostsId
@ G
,
G H
x
I J
.
J K
TagsId
K Q
}
R S
)
S T
;
T U
table
   
.
   

ForeignKey
   $
(
  $ %
name
¡¡ 
:
¡¡ 
$str
¡¡ 7
,
¡¡7 8
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
PostsId
¢¢' .
,
¢¢. /
principalTable
££ &
:
££& '
$str
££( .
,
££. /
principalColumn
¤¤ '
:
¤¤' (
$str
¤¤) -
,
¤¤- .
onDelete
¥¥  
:
¥¥  !
ReferentialAction
¥¥" 3
.
¥¥3 4
Cascade
¥¥4 ;
)
¥¥; <
;
¥¥< =
table
¦¦ 
.
¦¦ 

ForeignKey
¦¦ $
(
¦¦$ %
name
§§ 
:
§§ 
$str
§§ 5
,
§§5 6
column
¨¨ 
:
¨¨ 
x
¨¨  !
=>
¨¨" $
x
¨¨% &
.
¨¨& '
TagsId
¨¨' -
,
¨¨- .
principalTable
©© &
:
©©& '
$str
©©( -
,
©©- .
principalColumn
ªª '
:
ªª' (
$str
ªª) -
,
ªª- .
onDelete
««  
:
««  !
ReferentialAction
««" 3
.
««3 4
Cascade
««4 ;
)
««; <
;
««< =
}
¬¬ 
)
¬¬ 
;
¬¬ 
migrationBuilder
®® 
.
®® 
CreateTable
®® (
(
®®( )
name
¯¯ 
:
¯¯ 
$str
¯¯ $
,
¯¯$ %
columns
°° 
:
°° 
table
°° 
=>
°° !
new
°°" %
{
±± 
Id
²² 
=
²² 
table
²² 
.
²² 
Column
²² %
<
²²% &
Guid
²²& *
>
²²* +
(
²²+ ,
type
²², 0
:
²²0 1
$str
²²2 D
,
²²D E
nullable
²²F N
:
²²N O
false
²²P U
)
²²U V
,
²²V W
ParentId
³³ 
=
³³ 
table
³³ $
.
³³$ %
Column
³³% +
<
³³+ ,
Guid
³³, 0
>
³³0 1
(
³³1 2
type
³³2 6
:
³³6 7
$str
³³8 J
,
³³J K
nullable
³³L T
:
³³T U
false
³³V [
)
³³[ \
,
³³\ ]
	CommentId
´´ 
=
´´ 
table
´´  %
.
´´% &
Column
´´& ,
<
´´, -
Guid
´´- 1
>
´´1 2
(
´´2 3
type
´´3 7
:
´´7 8
$str
´´9 K
,
´´K L
nullable
´´M U
:
´´U V
false
´´W \
)
´´\ ]
}
µµ 
,
µµ 
constraints
¶¶ 
:
¶¶ 
table
¶¶ "
=>
¶¶# %
{
·· 
table
¸¸ 
.
¸¸ 

PrimaryKey
¸¸ $
(
¸¸$ %
$str
¸¸% 6
,
¸¸6 7
x
¸¸8 9
=>
¸¸: <
x
¸¸= >
.
¸¸> ?
Id
¸¸? A
)
¸¸A B
;
¸¸B C
table
¹¹ 
.
¹¹ 

ForeignKey
¹¹ $
(
¹¹$ %
name
ºº 
:
ºº 
$str
ºº @
,
ºº@ A
column
»» 
:
»» 
x
»»  !
=>
»»" $
x
»»% &
.
»»& '
ParentId
»»' /
,
»»/ 0
principalTable
¼¼ &
:
¼¼& '
$str
¼¼( 1
,
¼¼1 2
principalColumn
½½ '
:
½½' (
$str
½½) -
,
½½- .
onDelete
¾¾  
:
¾¾  !
ReferentialAction
¾¾" 3
.
¾¾3 4
Cascade
¾¾4 ;
)
¾¾; <
;
¾¾< =
}
¿¿ 
)
¿¿ 
;
¿¿ 
migrationBuilder
ÁÁ 
.
ÁÁ 
CreateIndex
ÁÁ (
(
ÁÁ( )
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ 0
,
ÂÂ0 1
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ %
,
ÃÃ% &
column
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
)
ÄÄ" #
;
ÄÄ# $
migrationBuilder
ÆÆ 
.
ÆÆ 
CreateIndex
ÆÆ (
(
ÆÆ( )
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ )
,
ÇÇ) *
table
ÈÈ 
:
ÈÈ 
$str
ÈÈ  
,
ÈÈ  !
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ  
)
ÉÉ  !
;
ÉÉ! "
migrationBuilder
ËË 
.
ËË 
CreateIndex
ËË (
(
ËË( )
name
ÌÌ 
:
ÌÌ 
$str
ÌÌ )
,
ÌÌ) *
table
ÍÍ 
:
ÍÍ 
$str
ÍÍ  
,
ÍÍ  !
column
ÎÎ 
:
ÎÎ 
$str
ÎÎ  
)
ÎÎ  !
;
ÎÎ! "
migrationBuilder
ÐÐ 
.
ÐÐ 
CreateIndex
ÐÐ (
(
ÐÐ( )
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ &
,
ÑÑ& '
table
ÒÒ 
:
ÒÒ 
$str
ÒÒ 
,
ÒÒ 
column
ÓÓ 
:
ÓÓ 
$str
ÓÓ  
)
ÓÓ  !
;
ÓÓ! "
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateIndex
ÕÕ (
(
ÕÕ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ '
,
ÖÖ' (
table
×× 
:
×× 
$str
×× 
,
×× 
column
ØØ 
:
ØØ 
$str
ØØ !
)
ØØ! "
;
ØØ" #
migrationBuilder
ÚÚ 
.
ÚÚ 
CreateIndex
ÚÚ (
(
ÚÚ( )
name
ÛÛ 
:
ÛÛ 
$str
ÛÛ &
,
ÛÛ& '
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
,
ÜÜ 
column
ÝÝ 
:
ÝÝ 
$str
ÝÝ  
)
ÝÝ  !
;
ÝÝ! "
migrationBuilder
ßß 
.
ßß 
CreateIndex
ßß (
(
ßß( )
name
àà 
:
àà 
$str
àà &
,
àà& '
table
áá 
:
áá 
$str
áá 
,
áá 
column
ââ 
:
ââ 
$str
ââ  
)
ââ  !
;
ââ! "
migrationBuilder
ää 
.
ää 
CreateIndex
ää (
(
ää( )
name
åå 
:
åå 
$str
åå )
,
åå) *
table
ææ 
:
ææ 
$str
ææ  
,
ææ  !
column
çç 
:
çç 
$str
çç  
)
çç  !
;
çç! "
migrationBuilder
éé 
.
éé 
CreateIndex
éé (
(
éé( )
name
êê 
:
êê 
$str
êê +
,
êê+ ,
table
ëë 
:
ëë 
$str
ëë "
,
ëë" #
column
ìì 
:
ìì 
$str
ìì  
)
ìì  !
;
ìì! "
}
íí 	
	protected
ðð 
override
ðð 
void
ðð 
Down
ðð  $
(
ðð$ %
MigrationBuilder
ðð% 5
migrationBuilder
ðð6 F
)
ððF G
{
ññ 	
migrationBuilder
òò 
.
òò 
	DropTable
òò &
(
òò& '
name
óó 
:
óó 
$str
óó $
)
óó$ %
;
óó% &
migrationBuilder
õõ 
.
õõ 
	DropTable
õõ &
(
õõ& '
name
öö 
:
öö 
$str
öö 
)
öö 
;
öö 
migrationBuilder
øø 
.
øø 
	DropTable
øø &
(
øø& '
name
ùù 
:
ùù 
$str
ùù 
)
ùù  
;
ùù  !
migrationBuilder
ûû 
.
ûû 
	DropTable
ûû &
(
ûû& '
name
üü 
:
üü 
$str
üü !
)
üü! "
;
üü" #
migrationBuilder
þþ 
.
þþ 
	DropTable
þþ &
(
þþ& '
name
ÿÿ 
:
ÿÿ 
$str
ÿÿ 
)
ÿÿ  
;
ÿÿ  !
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
 
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
 
migrationBuilder
 
.
 
	DropTable
 &
(
& '
name
 
:
 
$str
 
)
 
;
 
}
 	
}
 
} å
@C:\Users\qayum\source\repos\Practice\Practice\Data\Model\User.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
User 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
BirthDay  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
DateTime 
Created 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
Gender		 
Gender		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
string

 
PhoneNumber

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
bool 
IsAuthor 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
false- 2
;2 3
public 
ICollection 
< 
Post 
>  
Posts! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
List; ?
<? @
Post@ D
>D E
(E F
)F G
;G H
public 
ICollection 
< 
Like 
>  
Likes! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
List; ?
<? @
Like@ D
>D E
(E F
)F G
;G H
public 
ICollection 
< 
Comment "
>" #
Comments$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
new= @
ListA E
<E F
CommentF M
>M N
(N O
)O P
;P Q
} 
} î
EC:\Users\qayum\source\repos\Practice\Practice\Data\Model\UsedToken.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
	UsedToken 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
} 
}		 É
?C:\Users\qayum\source\repos\Practice\Practice\Data\Model\Tag.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
Tag 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 
CreatedTime #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
ICollection		 
<		 
Post		 
>		  
Posts		! &
{		' (
get		) ,
;		, -
set		. 1
;		1 2
}		3 4
=		5 6
new		7 :
List		; ?
<		? @
Post		@ D
>		D E
(		E F
)		F G
;		G H
}

 
} §
@C:\Users\qayum\source\repos\Practice\Practice\Data\Model\Sort.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

enum 
Sort 
{ 
	CreateAsc 
, 

CreateDesc 
, 
LikeAsc 
, 
LikeDesc 
}		 
}

 Þ
DC:\Users\qayum\source\repos\Practice\Practice\Data\Model\Response.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
Response 
{ 
public 
string 
Stasus 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 
@C:\Users\qayum\source\repos\Practice\Practice\Data\Model\Post.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
Post 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
public		 
int		 
ReadTime		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
DateTime

 
Created

 
{

  !
get

" %
;

% &
set

' *
;

* +
}

, -
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
ICollection 
< 
Like 
>  
Likes! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
List; ?
<? @
Like@ D
>D E
(E F
)F G
;G H
public 
bool 
HasLIke 
{ 
get !
;! "
set# &
;& '
}( )
public 
ICollection 
< 
Tag 
> 
Tags  $
{% &
get' *
;* +
set, /
;/ 0
}1 2
=3 4
new5 8
List9 =
<= >
Tag> A
>A B
(B C
)C D
;D E
public 
ICollection 
< 
Comment "
>" #
Comments$ ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
=; <
new= @
ListA E
<E F
CommentF M
>M N
(N O
)O P
;P Q
public 
int 
CommentsConunt !
{" #
get$ '
;' (
set) ,
;, -
}. /
} 
} ¸
IC:\Users\qayum\source\repos\Practice\Practice\Data\Model\ParentComment.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
ParentComment 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
Guid 
ChildId 
{ 
get !
;! "
set# &
;& '
}( )
public 
ICollection 
< 
Comment "
>" #
ChildComment$ 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
}		 
FC:\Users\qayum\source\repos\Practice\Practice\Data\Model\Pagination.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 

Pagination 
{ 
public 
List 
< 
Guid 
> 
? 
TagGuidList &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
string 
? 

AuthorName !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
MinReadTime 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
int 
MaxReadTime 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
Sort		 
Sort		 
{		 
get		 
;		 
set		  #
;		# $
}		% &
public

 
int

 
Page

 
{

 
get

 
;

 
set

 "
;

" #
}

$ %
=

& '
$num

( )
;

) *
public 
int 
	PostCount 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
$num- .
;. /
} 
} Ñ

@C:\Users\qayum\source\repos\Practice\Practice\Data\Model\Like.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
Like 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
DateTime 

CreateTime "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
DateTime		 

DeliteTime		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
Guid 
PostId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Post 
Post 
{ 
get 
; 
set  #
;# $
}% &
} 
} 
BC:\Users\qayum\source\repos\Practice\Practice\Data\Model\Gender.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
[ 
JsonConverter 
( 
typeof 
( #
JsonStringEnumConverter 1
)1 2
)2 3
]3 4
public 

enum 
Gender 
{ 
Male 
, 
Female		 
}

 
} è
CC:\Users\qayum\source\repos\Practice\Practice\Data\Model\Comment.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
Comment 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
DateTime 

CreateTime "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 
ModifiedTime $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
DelitedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public		 
string		 
Text		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
public 
User 
User 
{ 
get 
; 
set  #
;# $
}% &
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
Guid 
? 
ParentCommentId $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
ICollection 
< 
ChildCommentId )
>) *
?* +
ChildComments, 9
{: ;
get< ?
;? @
setA D
;D E
}F G
=H I
newJ M
ListN R
<R S
ChildCommentIdS a
>a b
(b c
)c d
;d e
public 
Guid 
PostId 
{ 
get  
;  !
set" %
;% &
}' (
public 
Post 
Post 
{ 
get 
; 
set  #
;# $
}% &
} 
} ü
HC:\Users\qayum\source\repos\Practice\Practice\Data\Model\ChildComment.cs
	namespace 	
Practice
 
. 
Data 
. 
Model 
{ 
public 

class 
ChildCommentId 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
Guid 
ParentId 
{ 
get "
;" #
set$ '
;' (
}) *
public 
Guid 
	CommentId 
{ 
get  #
;# $
set% (
;( )
}* +
} 
}		 

IC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\UserRegisterDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
UserRegisterDto  
{ 
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
string		 
Password		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
[

 	
EmailAddress

	 
]

 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
BirthDay  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
Gender 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ä
AC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\UserDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
UserDto 
{ 
[ 	
Required	 
] 
public		 
Guid		 
Id		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
[

 	
Required

	 
]

 
public 
DateTime 
Created 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
BirthDay  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 
PhoneNumber !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
public 
Gender 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ò
BC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\TokenDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
TokenDto 
{ 
[ 	
Required	 
] 
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
}		 
}

 
@C:\Users\qayum\source\repos\Practice\Practice\Data\Dto\TagDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
TagDto 
{ 
[ 	
Required	 
] 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
[		 	
Required			 
]		 
public

 
string

 
Name

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
[ 	
Required	 
] 
public 
DateTime 

CreateTime "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} 
@C:\Users\qayum\source\repos\Practice\Practice\Data\Dto\Second.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
Second 
{ 
public 
First 
First 
{ 
get  
;  !
set" %
;% &
}' (
public 
Second 
( 
First 
first !
)! "
{ 	
First		 
=		 
first		 
;		 
}

 	
} 
} 
MC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\PostWithCommentsDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
PostWithCommentsDto $
{ 
[ 	
Required	 
] 
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
[		 	
Required			 
]		 
public

 
Guid

 
PostId

 
{

 
get

  
;

  !
set

" %
;

% &
}

' (
[ 	
Required	 
] 
public 
DateTime 
Created 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
int 
ReadTime 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
int 

LikesCount 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
public 
int 
CommentsCount  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
bool 
HasLike 
{ 
get !
;! "
set# &
;& '
}( )
public 
List 
< 
TagDto 
> 
TagList #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
public 
List 
< 

CommentDto 
> 
CommentList  +
{, -
get. 1
;1 2
set3 6
;6 7
}7 8
} 
} °

EC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\PostEditDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
PostEditDto 
{ 
public 
Guid 
PostId 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
public 
int 
ReadTime 
{ 
get !
;! "
set# &
;& '
}( )
public		 
List		 
<		 
Guid		 
>		 
AddTagGuidList		 (
{		) *
get		+ .
;		. /
set		0 3
;		3 4
}		5 6
public

 
List

 
<

 
Guid

 
>

 
DeleteTagGuidList

 +
{

, -
get

. 1
;

1 2
set

3 6
;

6 7
}

8 9
} 
} §
AC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\PostDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
PostDto 
{ 
[ 	
Required	 
] 
public 
Guid 
UserId 
{ 
get  
;  !
set" %
;% &
}' (
[		 	
Required			 
]		 
public

 
Guid

 
Id

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
[ 	
Required	 
] 
public 
DateTime 
Created 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
int 
ReadTime 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
int 

LikesCount 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Required	 
] 
public 
bool 
HasLike 
{ 
get !
;! "
set# &
;& '
}( )
public 
List 
< 
TagDto 
> 
TagList #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} Æ
GC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\PostCreateDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
PostCreateDto 
{ 
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
public 
List 
< 
Guid 
> 
TagGuidList %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
int 
ReadTime 
{ 
get !
;! "
set# &
;& '
}( )
}		 
}

 ê
JC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\LoginCredentials.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
LoginCredentials !
{ 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} 
?C:\Users\qayum\source\repos\Practice\Practice\Data\Dto\First.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
First 
{ 
public 
Second 
Second 
{ 
get "
;" #
set$ '
;' (
}) *
public 
First 
( 
Second 
second "
)" #
{ 	
Second		 
=		 
second		 
;		 
}

 	
} 
} é
EC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\EditUserDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
EditUserDto 
{ 
[ 	
EmailAddress	 
] 
public		 
string		 
Email		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
public

 
string

 
FullName

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
public 
DateTime 
BirthDay  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
Gender 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Phone 
{ 
get !
;! "
set# &
;& '
}( )
} 
} É
DC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\CommentDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 

CommentDto 
{ 
[ 	
Required	 
] 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
[		 	
Required			 
]		 
public

 
DateTime

 

CreateTime

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
public 
DateTime 
ModifiedTime $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
DelitedDate #
{$ %
get& )
;) *
set+ .
;. /
}0 1
[ 	
Required	 
] 
public 
string 
Text 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
public 
Guid 
AuthorId 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Required	 
] 
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
int 
SubCommentsCount #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} 
} «
JC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\CommentCreateDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
CommentCreateDto !
{ 
public 
string 
ParentId 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
Comment 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
null. 2
!2 3
;3 4
} 
} ô
CC:\Users\qayum\source\repos\Practice\Practice\Data\Dto\AuthorDto.cs
	namespace 	
Practice
 
. 
Data 
. 
Dto 
{ 
public 

class 
	AuthorDto 
{ 
[ 	
Required	 
] 
public		 
Guid		 
Id		 
{		 
get		 
;		 
set		 !
;		! "
}		# $
[

 	
Required

	 
]

 
public 
string 
FullName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
DateTime 
BirthDay  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
Gender 
Gender 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Posts 
{ 
get 
; 
set  #
;# $
}% &
public 
int 
Likes 
{ 
get 
; 
set  #
;# $
}% &
public 
DateTime 
Created 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} à
TC:\Users\qayum\source\repos\Practice\Practice\Data\AppValidator\RegisterValidator.cs
	namespace 	
Practice
 
. 
Data 
. 
AppValidator $
{ 
public 

class 
RegisterValidator "
:# $
AbstractValidator% 6
<6 7
UserRegisterDto7 F
>F G
{		 
public

 
RegisterValidator

  
(

  !
)

! "
{ 	
RuleFor 
( 
x 
=> 
x 
. 
FullName #
)# $
. 
NotNull 
( 
) 
. 
NotEmpty 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
. 
MaximumLength 
( 
$num !
)! "
;" #
RuleFor 
( 
x 
=> 
x 
. 
BirthDay #
)# $
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
LessThan 
( 
DateTime "
." #
Now# &
)& '
.' (
WithMessage( 3
(3 4
$str4 P
)P Q
. 
GreaterThan 
( 
new  
DateTime! )
() *
$num* .
,. /
$num0 1
,1 2
$num3 4
)4 5
)5 6
.6 7
WithMessage7 B
(B C
$strC g
)g h
;h i
RuleFor 
( 
x 
=> 
x 
. 
Email  
)  !
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
EmailAddress 
( 
EmailValidationMode 1
.1 2 
AspNetCoreCompatible2 F
)F G
;G H
RuleFor 
( 
x 
=> 
x 
. 
Password #
)# $
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
.   
MinimumLength   
(   
$num    
)    !
.!! 
MaximumLength!! 
(!! 
$num!! !
)!!! "
;!!" #
RuleFor## 
(## 
x## 
=>## 
x## 
.## 
PhoneNumber## &
)##& '
.$$ 
NotNull$$ 
($$ 
)$$ 
.%% 
NotEmpty%% 
(%% 
)%% 
.&& 
MinimumLength&& 
(&& 
$num&&  
)&&  !
.'' 
MaximumLength'' 
('' 
$num'' !
)''! "
;''" #
}(( 	
})) 
}** É
VC:\Users\qayum\source\repos\Practice\Practice\Data\AppValidator\PostCreateValidator.cs
	namespace 	
Practice
 
. 
Data 
. 
AppValidator $
{ 
public 

class 
PostCreateValidator $
:% &
AbstractValidator' 8
<8 9
PostCreateDto9 F
>F G
{ 
public		 
PostCreateValidator		 "
(		" #
)		# $
{

 	
RuleFor 
( 
x 
=> 
x 
. 
Title  
)  !
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
. 
MaximumLength 
( 
$num !
)! "
;" #
RuleFor 
( 
x 
=> 
x 
. 
Text 
)  
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
. 
MaximumLength 
( 
$num #
)# $
;$ %
RuleFor 
( 
x 
=> 
x 
. 
TagGuidList &
)& '
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
Must 
( 
x 
=> 
x 
. 
Count "
># $
$num% &
)& '
;' (
RuleFor 
( 
x 
=> 
x 
. 
ReadTime #
)# $
. 
GreaterThan 
( 
$num 
) 
. 
LessThan 
( 
$num 
) 
; 
} 	
}   
}!! 
QC:\Users\qayum\source\repos\Practice\Practice\Data\AppValidator\LoginValidator.cs
	namespace 	
Practice
 
. 
Data 
. 
AppValidator $
{ 
public 

class 
LoginValidator 
:  !
AbstractValidator" 3
<3 4
LoginCredentials4 D
>D E
{ 
public		 
LoginValidator		 
(		 
)		 
{

 	
RuleFor 
( 
x 
=> 
x 
. 
Email  
)  !
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
EmailAddress 
( 
EmailValidationMode 1
.1 2 
AspNetCoreCompatible2 F
)F G
;G H
RuleFor 
( 
x 
=> 
x 
. 
Password #
)# $
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
. 
MaximumLength 
( 
$num !
)! "
;" #
} 	
} 
} 
WC:\Users\qayum\source\repos\Practice\Practice\Data\AppValidator\EditProfileValidator.cs
	namespace 	
Practice
 
. 
Data 
. 
AppValidator $
{ 
public 

class  
EditProfileValidator %
:& '
AbstractValidator( 9
<9 :
EditUserDto: E
>E F
{ 
public		  
EditProfileValidator		 #
(		# $
)		$ %
{

 	
RuleFor 
( 
x 
=> 
x 
. 
FullName #
)# $
. 
NotNull 
( 
) 
. 
NotEmpty 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
. 
MaximumLength 
( 
$num !
)! "
;" #
RuleFor 
( 
x 
=> 
x 
. 
BirthDay #
)# $
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
LessThan 
( 
DateTime "
." #
Now# &
)& '
.' (
WithMessage( 3
(3 4
$str4 P
)P Q
. 
GreaterThan 
( 
new  
DateTime! )
() *
$num* .
,. /
$num0 1
,1 2
$num3 4
)4 5
)5 6
.6 7
WithMessage7 B
(B C
$strC g
)g h
;h i
RuleFor 
( 
x 
=> 
x 
. 
Email  
)  !
. 
NotEmpty 
( 
) 
. 
NotNull 
( 
) 
. 
EmailAddress 
( 
EmailValidationMode 1
.1 2 
AspNetCoreCompatible2 F
)F G
;G H
RuleFor 
( 
x 
=> 
x 
. 
Phone  
)  !
. 
NotNull 
( 
) 
. 
NotEmpty 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
.   
MaximumLength   
(   
$num   !
)  ! "
;  " #
}!! 	
}"" 
}## þ
YC:\Users\qayum\source\repos\Practice\Practice\Data\AppValidator\CommentCreateValidator.cs
	namespace 	
Practice
 
. 
Data 
. 
AppValidator $
{ 
public 

class "
CommentCreateValidator '
:( )
AbstractValidator* ;
<; <
CommentCreateDto< L
>L M
{ 
public "
CommentCreateValidator %
(% &
)& '
{		 	
RuleFor

 
(

 
x

 
=>

 
x

 
.

 
Comment

 "
)

" #
. 
NotNull 
( 
) 
. 
NotEmpty 
( 
) 
. 
MinimumLength 
( 
$num  
)  !
. 
MaximumLength 
( 
$num #
)# $
;$ %
} 	
} 
} ¿9
IC:\Users\qayum\source\repos\Practice\Practice\Data\AppMapper\AppMapper.cs
	namespace 	
Practice
 
. 
Data 
. 
	AppMapper !
{ 
public 

class 
	AppMapper 
: 
Profile $
{ 
public		 
	AppMapper		 
(		 
)		 
{

 	
	CreateMap 
< 
User 
, 
UserDto #
># $
($ %
)% &
;& '
	CreateMap 
< 
UserRegisterDto %
,% &
User' +
>+ ,
(, -
)- .
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Created( /
,/ 0
opt1 4
=>5 7
opt8 ;
.; <
MapFrom< C
(C D
srcD G
=>H J
DateTimeK S
.S T
NowT W
)W X
)X Y
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Id( *
,* +
opt, /
=>0 2
opt3 6
.6 7
MapFrom7 >
(> ?
src? B
=>C E
GuidF J
.J K
NewGuidK R
(R S
)S T
)T U
)U V
;V W
	CreateMap 
< 
User 
, 
	AuthorDto %
>% &
(& '
)' (
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Likes( -
,- .
opt/ 2
=>3 5
opt6 9
.9 :
MapFrom: A
(A B
srcB E
=>F H
srcI L
.L M
LikesM R
.R S
CountS X
)X Y
)Y Z
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Posts( -
,- .
opt/ 2
=>3 5
opt6 9
.9 :
MapFrom: A
(A B
srcB E
=>F H
srcI L
.L M
PostsM R
.R S
CountS X
)X Y
)Y Z
;Z [
	CreateMap 
< 
PostCreateDto #
,# $
Post% )
>) *
(* +
)+ ,
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Created( /
,/ 0
opt1 4
=>5 7
opt8 ;
.; <
MapFrom< C
(C D
srcD G
=>H J
DateTimeK S
.S T
NowT W
)W X
)X Y
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
Id( *
,* +
opt, /
=>0 2
opt3 6
.6 7
MapFrom7 >
(> ?
src? B
=>C E
GuidF J
.J K
NewGuidK R
(R S
)S T
)T U
)U V
;V W
	CreateMap 
< 
Comment 
, 

CommentDto )
>) *
(* +
)+ ,
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
AuthorId( 0
,0 1
opt2 5
=>6 8
opt9 <
.< =
MapFrom= D
(D E
srcE H
=>I K
srcL O
.O P
UserIdP V
)V W
)W X
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
SubCommentsCount( 8
,8 9
opt: =
=>> @
optA D
.D E
MapFromE L
(L M
srcM P
=>Q S
srcT W
.W X
ChildCommentsX e
==f h
nulli m
?n o
$nump q
:r s
srct w
.w x
ChildComments	x 
.
 
Count
 
)
 
)
 
;
 
	CreateMap 
< 
Post 
, 
PostDto #
># $
($ %
)% &
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (

LikesCount( 2
,2 3
opt4 7
=>8 :
opt; >
.> ?
MapFrom? F
(F G
srcG J
=>K M
srcN Q
.Q R
LikesR W
.W X
CountX ]
)] ^
)^ _
. 
	ForMember 
( 
dest 
=>  "
dest# '
.' (
HasLike( /
,/ 0
opt1 4
=>5 7
opt8 ;
.; <
MapFrom< C
(C D
srcD G
=>H J
srcK N
.N O
LikesO T
.T U
CountU Z
>[ \
$num] ^
)^ _
)_ `
;` a
	CreateMap!! 
<!! 
Post!! 
,!! 
PostWithCommentsDto!! /
>!!/ 0
(!!0 1
)!!1 2
."" 
	ForMember"" 
("" 
dest"" 
=>""  "
dest""# '
.""' (

LikesCount""( 2
,""2 3
opt""4 7
=>""8 :
opt""; >
.""> ?
MapFrom""? F
(""F G
src""G J
=>""K M
src""N Q
.""Q R
Likes""R W
.""W X
Count""X ]
)""] ^
)""^ _
.## 
	ForMember## 
(## 
dest## 
=>##  "
dest### '
.##' (
HasLike##( /
,##/ 0
opt##1 4
=>##5 7
opt##8 ;
.##; <
MapFrom##< C
(##C D
src##D G
=>##H J
src##K N
.##N O
Likes##O T
.##T U
Count##U Z
>##[ \
$num##] ^
)##^ _
)##_ `
.$$ 
	ForMember$$ 
($$ 
dest$$ 
=>$$  "
dest$$# '
.$$' (
CommentsCount$$( 5
,$$5 6
opt$$7 :
=>$$; =
opt$$> A
.$$A B
MapFrom$$B I
($$I J
src$$J M
=>$$N P
src$$Q T
.$$T U
Comments$$U ]
.$$] ^
Count$$^ c
)$$c d
)$$d e
.%% 
	ForMember%% 
(%% 
dest%% 
=>%%  "
dest%%# '
.%%' (

AuthorName%%( 2
,%%2 3
opt%%4 7
=>%%8 :
opt%%; >
.%%> ?
MapFrom%%? F
(%%F G
src%%G J
=>%%K M
src%%N Q
.%%Q R
User%%R V
.%%V W
FullName%%W _
)%%_ `
)%%` a
;%%a b
}&& 	
}'' 
}(( D
BC:\Users\qayum\source\repos\Practice\Practice\Data\AppDbContext.cs
	namespace 	
Practice
 
. 
Data 
; 
public 
class 
AppDbContext 
: 
	DbContext %
{ 
public 

AppDbContext 
( 
DbContextOptions (
<( )
AppDbContext) 5
>5 6
options7 >
)> ?
:@ A
baseB F
(F G
optionsG N
)N O
{P Q
}R S
public

 

DbSet

 
<

 
User

 
>

 
User

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 

DbSet 
< 
Post 
> 
Post 
{ 
get !
;! "
set# &
;& '
}( )
public 

DbSet 
< 
Comment 
> 
Comment !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

DbSet 
< 
ChildCommentId 
>  
ChildComment! -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 

DbSet 
< 
Like 
> 
Like 
{ 
get !
;! "
set# &
;& '
}( )
public 

DbSet 
< 
Tag 
> 
Tag 
{ 
get 
;  
set! $
;$ %
}& '
public 

DbSet 
< 
	UsedToken 
> 
	UsedToken %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
modelBuilder 
. 
Entity 
< 
	UsedToken %
>% &
(& '
)' (
.( )
HasKey) /
(/ 0
e0 1
=>2 4
e5 6
.6 7
Id7 9
)9 :
;: ;
modelBuilder 
. 
Entity 
< 
User  
>  !
(! "
)" #
.# $
HasKey$ *
(* +
e+ ,
=>- /
e0 1
.1 2
Id2 4
)4 5
;5 6
modelBuilder 
. 
Entity 
< 
User  
>  !
(! "
)" #
. 
HasMany 
( 
e 
=> 
e 
. 
Posts !
)! "
. 
WithOne 
( 
e 
=> 
e 
. 
User  
)  !
.   
HasForeignKey   
(   
e   
=>   
e    !
.  ! "
UserId  " (
)  ( )
.!! 

IsRequired!! 
(!! 
false!! 
)!! 
;!! 
modelBuilder"" 
."" 
Entity"" 
<"" 
User""  
>""  !
(""! "
)""" #
.## 
HasMany## 
(## 
e## 
=>## 
e## 
.## 
Comments## $
)##$ %
.$$ 
WithOne$$ 
($$ 
e$$ 
=>$$ 
e$$ 
.$$ 
User$$  
)$$  !
.%% 
HasForeignKey%% 
(%% 
e%% 
=>%% 
e%%  !
.%%! "
UserId%%" (
)%%( )
.&& 

IsRequired&& 
(&& 
false&& 
)&& 
;&& 
modelBuilder'' 
.'' 
Entity'' 
<'' 
User''  
>''  !
(''! "
)''" #
.(( 
HasMany(( 
((( 
e(( 
=>(( 
e(( 
.(( 
Likes(( !
)((! "
.)) 
WithOne)) 
()) 
e)) 
=>)) 
e)) 
.)) 
User))  
)))  !
.** 
HasForeignKey** 
(** 
e** 
=>** 
e**  !
.**! "
UserId**" (
)**( )
.++ 

IsRequired++ 
(++ 
false++ 
)++ 
;++ 
modelBuilder11 
.11 
Entity11 
<11 
Post11  
>11  !
(11! "
)11" #
.11# $
HasKey11$ *
(11* +
e11+ ,
=>11- /
e110 1
.111 2
Id112 4
)114 5
;115 6
modelBuilder22 
.22 
Entity22 
<22 
Post22  
>22  !
(22! "
)22" #
.33 
HasMany33 
(33 
e33 
=>33 
e33 
.33 
Comments33 $
)33$ %
.44 
WithOne44 
(44 
e44 
=>44 
e44 
.44 
Post44  
)44  !
.55 
HasForeignKey55 
(55 
e55 
=>55 
e55  !
.55! "
PostId55" (
)55( )
.66 

IsRequired66 
(66 
)66 
;66 
modelBuilder77 
.77 
Entity77 
<77 
Post77  
>77  !
(77! "
)77" #
.88 
HasMany88 
<88 
Like88 
>88 
(88 
)88 
.99 
WithOne99 
(99 
e99 
=>99 
e99 
.99 
Post99  
)99  !
.:: 
HasForeignKey:: 
(:: 
e:: 
=>:: 
e::  !
.::! "
PostId::" (
)::( )
.;; 

IsRequired;; 
(;; 
);; 
;;; 
modelBuilder<< 
.<< 
Entity<< 
<<< 
Post<<  
><<  !
(<<! "
)<<" #
.== 
HasMany== 
(== 
e== 
=>== 
e== 
.== 
Tags==  
)==  !
.>> 
WithMany>> 
(>> 
e>> 
=>>> 
e>> 
.>> 
Posts>> "
)>>" #
;>># $
modelBuilderDD 
.DD 
EntityDD 
<DD 
TagDD 
>DD  
(DD  !
)DD! "
.DD" #
HasKeyDD# )
(DD) *
eDD* +
=>DD, .
eDD/ 0
.DD0 1
IdDD1 3
)DD3 4
;DD4 5
modelBuilderII 
.II 
EntityII 
<II 
ChildCommentIdII *
>II* +
(II+ ,
)II, -
.II- .
HasKeyII. 4
(II4 5
eII5 6
=>II7 9
eII: ;
.II; <
IdII< >
)II> ?
;II? @
modelBuilderKK 
.KK 
EntityKK 
<KK 
CommentKK #
>KK# $
(KK$ %
)KK% &
.KK& '
HasKeyKK' -
(KK- .
eKK. /
=>KK0 2
eKK3 4
.KK4 5
IdKK5 7
)KK7 8
;KK8 9
modelBuilderLL 
.LL 
EntityLL 
<LL 
CommentLL #
>LL# $
(LL$ %
)LL% &
.MM 
HasManyMM 
(MM 
eMM 
=>MM 
eMM 
.MM 
ChildCommentsMM )
)MM) *
.NN 
WithOneNN 
(NN 
)NN 
.OO 

IsRequiredOO 
(OO 
)OO 
.PP 
HasForeignKeyPP 
(PP 
ePP 
=>PP 
ePP  !
.PP! "
ParentIdPP" *
)PP* +
;PP+ ,
modelBuilderVV 
.VV 
EntityVV 
<VV 
LikeVV  
>VV  !
(VV! "
)VV" #
.VV# $
HasKeyVV$ *
(VV* +
eVV+ ,
=>VV- /
eVV0 1
.VV1 2
IdVV2 4
)VV4 5
;VV5 6
}YY 
}ZZ ½L
KC:\Users\qayum\source\repos\Practice\Practice\Controllers\UserController.cs
	namespace 	
Practice
 
. 
Controllers 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
UserController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IAuthService %
_authService& 2
;2 3
private 
readonly #
IRegisterCheckerService 0#
_registerCheckerService1 H
;H I
private 
readonly 
ILoginCheckService +
_loginCheckService, >
;> ?
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
private 
readonly 
IUserService %
_userService& 2
;2 3
public 
UserController 
( 
IAuthService *
authService+ 6
,6 7#
IRegisterCheckerService #"
registerCheckerService$ :
,: ;
ILoginCheckService 
loginCheckService 0
,0 1
ITokenService 
tokenService &
,& '
IUserService 
userService $
,$ %

IValidator 
< 
UserRegisterDto &
>& '
registerValidator( 9
)   
{!! 	
_authService"" 
="" 
authService"" &
;""& '#
_registerCheckerService## #
=##$ %"
registerCheckerService##& <
;##< =
_loginCheckService$$ 
=$$  
loginCheckService$$! 2
;$$2 3
_tokenService%% 
=%% 
tokenService%% (
;%%( )
_userService&& 
=&& 
userService&& &
;&&& '
}'' 	
[11 	
HttpPost11	 
(11 
$str11 
)11 
]11 
public22 
async22 
Task22 
<22 
ActionResult22 &
<22& '
TokenDto22' /
>22/ 0
>220 1
Register222 :
(22: ;
[22; <
FromBody22< D
]22D E
UserRegisterDto22F U
userRegisterDto22V e
)22e f
{33 	
if44 
(44 #
_registerCheckerService44 '
.44' (
IsEmailExists44( 5
(445 6
userRegisterDto446 E
.44E F
Email44F K
)44K L
.44L M
Result44M S
)44S T
return44U [

StatusCode44\ f
(44f g
$num44g j
,44j k
$str	44l 
)
44 
;
44 
var66 
token66 
=66 
new66 
TokenDto66 $
(66$ %
)66% &
{77 
Token88 
=88 
await88 
_authService88 *
.88* +
Register88+ 3
(883 4
userRegisterDto884 C
)88C D
}99 
;99 
return;; 
Ok;; 
(;; 
token;; 
);; 
;;; 
}<< 	
[GG 	
HttpPostGG	 
(GG 
$strGG 
)GG 
]GG 
publicHH 
asyncHH 
TaskHH 
<HH 
ActionResultHH &
<HH& '
TokenDtoHH' /
>HH/ 0
>HH0 1
LoginHH2 7
(HH7 8
LoginCredentialsHH8 H
loginCredentialsHHI Y
)HHY Z
{II 	
ifJJ 
(JJ 
!JJ 

ModelStateJJ 
.JJ 
IsValidJJ #
)JJ# $
{JJ% &
returnJJ' -

StatusCodeJJ. 8
(JJ8 9
$numJJ9 <
)JJ< =
;JJ= >
}JJ? @
;JJ@ A
ifLL 
(LL 
!LL 
awaitLL #
_registerCheckerServiceLL .
.LL. /
IsEmailExistsLL/ <
(LL< =
loginCredentialsLL= M
.LLM N
EmailLLN S
)LLS T
||MM 
!MM 
awaitMM 
_loginCheckServiceMM ,
.MM, -
IsLoginCorrectMM- ;
(MM; <
loginCredentialsMM< L
)MML M
)MMM N
{MMO P
returnMMQ W

StatusCodeMMX b
(MMb c
$numMMc f
)MMf g
;MMg h
}MMi j
varOO 
tokenOO 
=OO 
awaitOO 
_authServiceOO *
.OO* +
LogInOO+ 0
(OO0 1
loginCredentialsOO1 A
)OOA B
;OOB C
returnQQ 
OkQQ 
(QQ 
tokenQQ 
)QQ 
;QQ 
}RR 	
[\\ 	
HttpPost\\	 
(\\ 
$str\\ 
)\\ 
]\\ 
[]] 	
	Authorize]]	 
]]] 
public^^ 
async^^ 
Task^^ 
<^^ 
ActionResult^^ &
<^^& '
Response^^' /
>^^/ 0
>^^0 1
Logout^^2 8
(^^8 9
)^^9 :
{__ 	
var`` 
token`` 
=`` 
await`` 
HttpContext`` )
.``) *
GetTokenAsync``* 7
(``7 8
$str``8 F
)``F G
;``G H
varbb 
isValidbb 
=bb 
awaitbb 
_tokenServicebb  -
.bb- .
IsTokenValidbb. :
(bb: ;
tokenbb; @
)bb@ A
;bbA B
ifdd 
(dd 
!dd 
isValiddd 
)dd 
returndd  

StatusCodedd! +
(dd+ ,
$numdd, /
)dd/ 0
;dd0 1
awaitff 
_authServiceff 
.ff 
LogOutff %
(ff% &
tokenff& +
)ff+ ,
;ff, -
returnhh 
Okhh 
(hh 
newhh 
Responsehh "
(hh" #
)hh# $
{ii 
Stasusjj 
=jj 
$strjj "
,jj" #
Messagekk 
=kk 
$strkk 7
}ll 
)ll 
;ll 
}nn 	
[xx 	
HttpGetxx	 
(xx 
$strxx 
)xx 
]xx 
[yy 	
	Authorizeyy	 
]yy 
publiczz 
asynczz 
Taskzz 
<zz 
ActionResultzz &
<zz& '
UserDtozz' .
>zz. /
>zz/ 0

GetProfilezz1 ;
(zz; <
)zz< =
{{{ 	
var}} 
token}} 
=}} 
await}} 
HttpContext}} )
.}}) *
GetTokenAsync}}* 7
(}}7 8
$str}}8 F
)}}F G
;}}G H
var 
isValid 
= 
await 
_tokenService  -
.- .
IsTokenValid. :
(: ;
token; @
)@ A
;A B
if
 
(
 
!
 
isValid
 
)
 
return
  

StatusCode
! +
(
+ ,
$num
, /
)
/ 0
;
0 1
var
 
id
 
=
 
await
 
_tokenService
 (
.
( )
GetGuid
) 0
(
0 1
token
1 6
)
6 7
;
7 8
var
 
userDto
 
=
 
await
 
_userService
  ,
.
, -!
GetUserProfileAsync
- @
(
@ A
id
A C
)
C D
;
D E
return
 
Ok
 
(
 
userDto
 
)
 
;
 
}
 	
[
 	
HttpPut
	 
(
 
$str
 
)
 
]
 
[
 	
	Authorize
	 
]
 
public
 
async
 
Task
 
<
 
ActionResult
 &
<
& '
Response
' /
>
/ 0
>
0 1
EditProfile
2 =
(
= >
[
> ?
FromBody
? G
]
G H
EditUserDto
I T
editUserDto
U `
)
` a
{
 	
var
 
token
 
=
 
await
 
HttpContext
 )
.
) *
GetTokenAsync
* 7
(
7 8
$str
8 F
)
F G
;
G H
var
 
isValid
 
=
 
await
 
_tokenService
  -
.
- .
IsTokenValid
. :
(
: ;
token
; @
)
@ A
;
A B
if
 
(
 
!
 
isValid
 
)
 
return
  

StatusCode
! +
(
+ ,
$num
, /
)
/ 0
;
0 1
var
 
id
 
=
 
await
 
_tokenService
 (
.
( )
GetGuid
) 0
(
0 1
token
1 6
)
6 7
;
7 8
var
 
response
 
=
 
await
  
_userService
! -
.
- ."
EditUserProfileAsync
. B
(
B C
id
C E
,
E F
editUserDto
G R
)
R S
;
S T
return
¡¡ 
Ok
¡¡ 
(
¡¡ 
response
¡¡ 
)
¡¡ 
;
¡¡  
}
¢¢ 	
}
££ 
}¤¤ ÿ
JC:\Users\qayum\source\repos\Practice\Practice\Controllers\TagController.cs
	namespace 	
Practice
 
. 
Controllers 
{ 
[		 
Route		 

(		
 
$str		 
)		 
]		 
[

 
ApiController

 
]

 
public 

class 
TagController 
:  
ControllerBase! /
{ 
private 
readonly 
AppDbContext %
_context& .
;. /
private 
readonly 
ITagService $
_tagService% 0
;0 1
public 
TagController 
( 
AppDbContext )
context* 1
,1 2
ITagService 

tagService "
)" #
{ 	
_context 
= 
context 
; 
_tagService 
= 

tagService $
;$ %
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
List 
< 
TagDto %
>% &
>& '
GetTag( .
(. /
)/ 0
{ 	
return 
await 
_tagService $
.$ %
GetTagDtoList% 2
(2 3
)3 4
;4 5
}   	
[!! 	
HttpPost!!	 
]!! 
public"" 
async"" 
Task"" 

CreateTags"" $
(""$ %
List""% )
<"") *
string""* 0
>""0 1
tags""2 6
)""6 7
{## 	
foreach$$ 
($$ 
var$$ 
item$$ 
in$$  
tags$$! %
)$$% &
{%% 
_context&& 
.&& 
Tag&& 
.&& 
Add&&  
(&&  !
new&&! $
Tag&&% (
{'' 
Id(( 
=(( 
Guid(( 
.(( 
NewGuid(( %
(((% &
)((& '
,((' (
Name)) 
=)) 
item)) 
,))  
CreatedTime** 
=**  !
DateTime**" *
.*** +
Now**+ .
,**. /
}++ 
)++ 
;++ 
},, 
await-- 
_context-- 
.-- 
SaveChangesAsync-- +
(--+ ,
)--, -
;--- .
}.. 	
}// 
}00 Ü=
KC:\Users\qayum\source\repos\Practice\Practice\Controllers\PostController.cs
	namespace

 	
Practice


 
.

 
Controllers

 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
PostController 
:  !
ControllerBase" 0
{ 
private 
readonly 
IPostService %
_postService& 2
;2 3
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
public 
PostController 
( 
IPostService *
postService+ 6
,6 7
ITokenService 
tokenService &
)& '
{ 	
_postService 
= 
postService &
;& '
_tokenService 
= 
tokenService (
;( )
} 	
[** 	
HttpGet**	 
]** 
public++ 
async++ 
Task++ 
<++ 
ActionResult++ &
<++& '
List++' +
<+++ ,
PostDto++, 3
>++3 4
>++4 5
>++5 6
GetPostsList++7 C
(++C D
[,, 
	FromQuery,, 
],, 
List,, 
<,, 
Guid,, !
>,,! "
?,," #
	tagIdlist,,$ -
=,,. /
null,,0 4
,,,4 5
string-- 
?-- 

authorName-- 
=--  
null--! %
,--% &
int.. 
minReadTime.. 
=.. 
$num.. 
,..  
int// 
maxReadTime// 
=// 
$num// 
,//  
Sort00 
sort00 
=00 
Sort00 
.00 
	CreateAsc00 &
,00& '
int11 
page11 
=11 
$num11 
,11 
int22 
	postCount22 
=22 
$num22 
)22 
{33 	
if44 
(44 
!44 

ModelState44 
.44 
IsValid44 "
)44" #
{44$ %
return44& ,

BadRequest44- 7
(447 8

ModelState448 B
)44B C
;44C D
}44E F
var66 

pagination66 
=66 
new66  

Pagination66! +
{77 
TagGuidList88 
=88 
	tagIdlist88 '
,88' (

AuthorName99 
=99 

authorName99 '
,99' (
MinReadTime:: 
=:: 
minReadTime:: )
,::) *
MaxReadTime;; 
=;; 
maxReadTime;; )
,;;) *
Sort<< 
=<< 
sort<< 
,<< 
Page== 
=== 
page== 
,== 
	PostCount>> 
=>> 
	postCount>> %
}?? 
;?? 
varAA 
resAA 
=AA 
awaitAA 
_postServiceAA (
.AA( )
GetPostDtoListAA) 7
(AA7 8

paginationAA8 B
)AAB C
;AAC D
ifCC 
(CC 
resCC 
==CC 
nullCC 
)CC 
returnCC "
NotFoundCC# +
(CC+ ,
)CC, -
;CC- .
returnEE 
OkEE 
(EE 
resEE 
)EE 
;EE 
}FF 	
[PP 	
HttpGetPP	 
(PP 
$strPP 
)PP 
]PP 
publicQQ 
asyncQQ 
TaskQQ 
<QQ 
ActionResultQQ &
<QQ& '
PostDtoQQ' .
>QQ. /
>QQ/ 0
GetConcretePostQQ1 @
(QQ@ A
GuidQQA E
idQQF H
)QQH I
{RR 	
varSS 
postDtoSS 
=SS 
awaitSS 
_postServiceSS  ,
.SS, -
GetPostDtoByIdSS- ;
(SS; <
idSS< >
)SS> ?
;SS? @
ifUU 
(UU 
postDtoUU 
==UU 
nullUU 
)UU  
returnUU! '
NotFoundUU( 0
(UU0 1
)UU1 2
;UU2 3
returnWW 
OkWW 
(WW 
postDtoWW 
)WW 
;WW 
}XX 	
[bb 	
HttpPostbb	 
(bb 
$strbb 
)bb 
]bb 
[cc 	
	Authorizecc	 
]cc 
publicdd 
asyncdd 
Taskdd 
<dd 
ActionResultdd &
<dd& '
Responsedd' /
>dd/ 0
>dd0 1
Likedd2 6
(dd6 7
Guiddd7 ;
iddd< >
)dd> ?
{ee 	
varff 
tokenff 
=ff 
awaitff 
HttpContextff )
.ff) *
GetTokenAsyncff* 7
(ff7 8
$strff8 F
)ffF G
;ffG H
ifhh 
(hh 
!hh 
awaithh 
_tokenServicehh $
.hh$ %
IsTokenValidhh% 1
(hh1 2
tokenhh2 7
)hh7 8
)hh8 9
returnhh: @
UnauthorizedhhA M
(hhM N
)hhN O
;hhO P
varjj 
userIdjj 
=jj 
awaitjj 
_tokenServicejj ,
.jj, -
GetGuidjj- 4
(jj4 5
tokenjj5 :
)jj: ;
;jj; <
varll 
responsell 
=ll 
awaitll  
_postServicell! -
.ll- .
LikePostll. 6
(ll6 7
userIdll7 =
,ll= >
idll? A
)llA B
;llB C
ifnn 
(nn 
responsenn 
==nn 
nullnn 
)nn  
returnnn! '
NotFoundnn( 0
(nn0 1
)nn1 2
;nn2 3
returnpp 
Okpp 
(pp 
responsepp 
)pp 
;pp  
}qq 	
[{{ 	

HttpDelete{{	 
({{ 
$str{{ 
){{  
]{{  !
[|| 	
	Authorize||	 
]|| 
public}} 
async}} 
Task}} 
<}} 
ActionResult}} &
<}}& '
Response}}' /
>}}/ 0
>}}0 1
Unlike}}2 8
(}}8 9
Guid}}9 =
id}}> @
)}}@ A
{~~ 	
var 
token 
= 
await 
HttpContext )
.) *
GetTokenAsync* 7
(7 8
$str8 F
)F G
;G H
if
 
(
 
!
 
await
 
_tokenService
 $
.
$ %
IsTokenValid
% 1
(
1 2
token
2 7
)
7 8
)
8 9
return
: @
Unauthorized
A M
(
M N
)
N O
;
O P
var
 
userId
 
=
 
await
 
_tokenService
 ,
.
, -
GetGuid
- 4
(
4 5
token
5 :
)
: ;
;
; <
var
 
response
 
=
 
await
  
_postService
! -
.
- .
DisLikePost
. 9
(
9 :
userId
: @
,
@ A
id
B D
)
D E
;
E F
if
 
(
 
response
 
==
 
null
  
)
  !
return
" (
NotFound
) 1
(
1 2
)
2 3
;
3 4
return
 
Ok
 
(
 
response
 
)
 
;
  
}
 	
}
 
} ¢4
NC:\Users\qayum\source\repos\Practice\Practice\Controllers\CommentController.cs
	namespace 	
Practice
 
. 
Controllers 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
CommentController "
:# $
ControllerBase% 3
{ 
private 
readonly 
ICommentService (
_commentService) 8
;8 9
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
public 
CommentController  
(  !
ICommentService! 0
commentService1 ?
,? @
ITokenService 
tokenService &
)& '
{ 	
_commentService 
= 
commentService ,
;, -
_tokenService 
= 
tokenService (
;( )
} 	
[## 	
HttpGet##	 
(## 
$str## 
)## 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
ActionResult$$ &
<$$& '
List$$' +
<$$+ ,

CommentDto$$, 6
>$$6 7
>$$7 8
>$$8 9

GetComment$$: D
($$D E
Guid$$E I
id$$J L
)$$L M
{%% 	
var&& 
comments&& 
=&& 
await&&  
_commentService&&! 0
.&&0 1
GetComments&&1 <
(&&< =
id&&= ?
)&&? @
;&&@ A
if(( 
((( 
comments(( 
==(( 
null(( 
)((  
{((! "
return((# )
NotFound((* 2
(((2 3
)((3 4
;((4 5
}((6 7
return** 
comments** 
;** 
}++ 	
[77 	
HttpPost77	 
(77 
$str77  
)77  !
]77! "
[88 	
	Authorize88	 
]88 
public99 
async99 
Task99 
<99 
ActionResult99 &
<99& '
Response99' /
>99/ 0
>990 1
Comment992 9
(999 :
[99: ;
FromBody99; C
]99C D
CommentCreateDto99E U
commentCreateDto99V f
,99f g
Guid99h l
id99m o
)99o p
{:: 	
var;; 
token;; 
=;; 
await;; 
HttpContext;; )
.;;) *
GetTokenAsync;;* 7
(;;7 8
$str;;8 F
);;F G
;;;G H
if== 
(== 
!== 
await== 
_tokenService== $
.==$ %
IsTokenValid==% 1
(==1 2
token==2 7
)==7 8
)==8 9
return==: @
Unauthorized==A M
(==M N
)==N O
;==O P
var?? 
userId?? 
=?? 
await?? 
_tokenService?? ,
.??, -
GetGuid??- 4
(??4 5
token??5 :
)??: ;
;??; <
varAA 
responseAA 
=AA 
awaitAA  
_commentServiceAA! 0
.AA0 1
CommentPostAA1 <
(AA< =
idAA= ?
,AA? @
userIdAAA G
,AAG H
commentCreateDtoAAI Y
)AAY Z
;AAZ [
returnCC 
OkCC 
(CC 
responseCC 
)CC 
;CC  
}DD 	
[PP 	
HttpPutPP	 
(PP 
$strPP 
)PP 
]PP 
[QQ 	
	AuthorizeQQ	 
]QQ 
publicRR 
asyncRR 
TaskRR 
<RR 
ActionResultRR &
<RR& '
ResponseRR' /
>RR/ 0
>RR0 1
EditCommentRR2 =
(RR= >
GuidRR> B
idRRC E
,RRE F
stringRRG M
editTextRRN V
)RRV W
{SS 	
varTT 
tokenTT 
=TT 
awaitTT 
HttpContextTT )
.TT) *
GetTokenAsyncTT* 7
(TT7 8
$strTT8 F
)TTF G
;TTG H
ifVV 
(VV 
!VV 
awaitVV 
_tokenServiceVV $
.VV$ %
IsTokenValidVV% 1
(VV1 2
tokenVV2 7
)VV7 8
)VV8 9
returnVV: @
UnauthorizedVVA M
(VVM N
)VVN O
;VVO P
varXX 
userIdXX 
=XX 
awaitXX 
_tokenServiceXX ,
.XX, -
GetGuidXX- 4
(XX4 5
tokenXX5 :
)XX: ;
;XX; <
varZZ 
responseZZ 
=ZZ 
awaitZZ  
_commentServiceZZ! 0
.ZZ0 1
EditCommentZZ1 <
(ZZ< =
idZZ= ?
,ZZ? @
userIdZZA G
,ZZG H
editTextZZI Q
)ZZQ R
;ZZR S
return\\ 
Ok\\ 
(\\ 
response\\ 
)\\ 
;\\  
}]] 	
[hh 	

HttpDeletehh	 
(hh 
$strhh 
)hh 
]hh 
[ii 	
	Authorizeii	 
]ii 
publicjj 
asyncjj 
Taskjj 
<jj 
ActionResultjj &
<jj& '
Responsejj' /
>jj/ 0
>jj0 1
DeleteCommentjj2 ?
(jj? @
Guidjj@ D
idjjE G
)jjG H
{kk 	
varll 
tokenll 
=ll 
awaitll 
HttpContextll )
.ll) *
GetTokenAsyncll* 7
(ll7 8
$strll8 F
)llF G
;llG H
ifnn 
(nn 
!nn 
awaitnn 
_tokenServicenn $
.nn$ %
IsTokenValidnn% 1
(nn1 2
tokennn2 7
)nn7 8
)nn8 9
returnnn: @
UnauthorizednnA M
(nnM N
)nnN O
;nnO P
varpp 
userIdpp 
=pp 
awaitpp 
_tokenServicepp ,
.pp, -
GetGuidpp- 4
(pp4 5
tokenpp5 :
)pp: ;
;pp; <
varrr 
responserr 
=rr 
awaitrr  
_commentServicerr! 0
.rr0 1
DeleteCommentrr1 >
(rr> ?
idrr? A
,rrA B
userIdrrC I
)rrI J
;rrJ K
returntt 
Oktt 
(tt 
responsett 
)tt 
;tt  
}uu 	
}vv 
}ww ©?
MC:\Users\qayum\source\repos\Practice\Practice\Controllers\AuthorController.cs
	namespace

 	
Practice


 
.

 
Controllers

 
{ 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
AuthorController !
:" #
ControllerBase$ 2
{ 
private 
readonly 
ITokenService &
_tokenService' 4
;4 5
private 
readonly 
IAuthorService '
_authorService( 6
;6 7
public 
AuthorController 
(  
ITokenService  -
tokenService. :
,: ;
IAuthorService 
authorService (
)( )
{ 	
_tokenService 
= 
tokenService (
;( )
_authorService 
= 
authorService *
;* +
} 	
[## 	
HttpGet##	 
(## 
$str## 
)## 
]## 
public$$ 
async$$ 
Task$$ 
<$$ 
ActionResult$$ &
<$$& '
List$$' +
<$$+ ,
	AuthorDto$$, 5
>$$5 6
>$$6 7
>$$7 8
AuthorsList$$9 D
($$D E
)$$E F
{%% 	
var&& 
autorDtoList&& 
=&& 
await&& $
_authorService&&% 3
.&&3 4
GetAuthorList&&4 A
(&&A B
)&&B C
;&&C D
return(( 
autorDtoList(( 
;((  
})) 	
[22 	
HttpGet22	 
(22 
$str22 
)22 
]22 
public33 
async33 
Task33 
<33 
ActionResult33 &
<33& '
	AuthorDto33' 0
>330 1
>331 2
GetConcreteAuthor333 D
(33D E
Guid33E I
id33J L
)33L M
{44 	
var55 
author55 
=55 
await55 
_authorService55 -
.55- .
GetAuthorDto55. :
(55: ;
id55; =
)55= >
;55> ?
if77 
(77 
author77 
==77 
null77 
)77 
{77  !
return77" (
NotFound77) 1
(771 2
)772 3
;773 4
}775 6
return99 
Ok99 
(99 
author99 
)99 
;99 
}:: 	
[EE 	
HttpPostEE	 
(EE 
$strEE 
)EE 
]EE 
[FF 	
	AuthorizeFF	 
]FF 
publicGG 
asyncGG 
TaskGG 
<GG 
ActionResultGG &
<GG& '
ResponseGG' /
>GG/ 0
>GG0 1

CreatePostGG2 <
(GG< =
[GG= >
FromBodyGG> F
]GGF G
PostCreateDtoGGH U
postDtoGGV ]
)GG] ^
{HH 	
varII 
tokenII 
=II 
awaitII 
HttpContextII )
.II) *
GetTokenAsyncII* 7
(II7 8
$strII8 F
)IIF G
;IIG H
varKK 
isTokenValidKK 
=KK 
awaitKK $
_tokenServiceKK% 2
.KK2 3
IsTokenValidKK3 ?
(KK? @
tokenKK@ E
)KKE F
;KKF G
ifLL 
(LL 
!LL 
isTokenValidLL 
)LL 
returnLL %

StatusCodeLL& 0
(LL0 1
$numLL1 4
)LL4 5
;LL5 6
ifNN 
(NN 
!NN 

ModelStateNN 
.NN 
IsValidNN #
)NN# $
returnNN% +

StatusCodeNN, 6
(NN6 7
$numNN7 :
)NN: ;
;NN; <
varPP 
userIdPP 
=PP 
awaitPP 
_tokenServicePP ,
.PP, -
GetGuidPP- 4
(PP4 5
tokenPP5 :
)PP: ;
;PP; <
varRR 
responseRR 
=RR 
awaitRR  
_authorServiceRR! /
.RR/ 0

CreatePostRR0 :
(RR: ;
userIdRR; A
,RRA B
postDtoRRC J
)RRJ K
;RRK L
returnTT 
OkTT 
(TT 
responseTT 
)TT 
;TT  
}UU 	
[`` 	
HttpPut``	 
(`` 
$str`` 
)`` 
]`` 
[aa 	
	Authorizeaa	 
]aa 
publicbb 
asyncbb 
Taskbb 
<bb 
ActionResultbb &
<bb& '
Responsebb' /
>bb/ 0
>bb0 1
	EditePostbb2 ;
(bb; <
[bb< =
FromBodybb= E
]bbE F
PostEditDtobbG R
postEditDtobbS ^
)bb^ _
{cc 	
vardd 
tokendd 
=dd 
awaitdd 
HttpContextdd )
.dd) *
GetTokenAsyncdd* 7
(dd7 8
$strdd8 F
)ddF G
;ddG H
varff 
isValidff 
=ff 
awaitff 
_tokenServiceff  -
.ff- .
IsTokenValidff. :
(ff: ;
tokenff; @
)ff@ A
;ffA B
ifhh 
(hh 
!hh 
isValidhh 
)hh 
returnhh  

StatusCodehh! +
(hh+ ,
$numhh, /
)hh/ 0
;hh0 1
varjj 
userIdjj 
=jj 
awaitjj 
_tokenServicejj ,
.jj, -
GetGuidjj- 4
(jj4 5
tokenjj5 :
)jj: ;
;jj; <
varll 
responsell 
=ll 
awaitll  
_authorServicell! /
.ll/ 0
EditPostll0 8
(ll8 9
userIdll9 ?
,ll? @
postEditDtollA L
)llL M
;llM N
returnnn 
Oknn 
(nn 
responsenn 
)nn 
;nn  
}oo 	
[zz 	

HttpDeletezz	 
(zz 
$strzz 
)zz 
]zz 
[{{ 	
	Authorize{{	 
]{{ 
public|| 
async|| 
Task|| 
<|| 
ActionResult|| &
<||& '
Response||' /
>||/ 0
>||0 1

DeletePost||2 <
(||< =
Guid||= A
postId||B H
)||H I
{}} 	
var~~ 
token~~ 
=~~ 
await~~ 
HttpContext~~ )
.~~) *
GetTokenAsync~~* 7
(~~7 8
$str~~8 F
)~~F G
;~~G H
var
 
isValid
 
=
 
await
 
_tokenService
  -
.
- .
IsTokenValid
. :
(
: ;
token
; @
)
@ A
;
A B
if
 
(
 
!
 
isValid
 
)
 
return
  

StatusCode
! +
(
+ ,
$num
, /
)
/ 0
;
0 1
if
 
(
 
!
 

ModelState
 
.
 
IsValid
 #
)
# $
return
% +

BadRequest
, 6
(
6 7
)
7 8
;
8 9
var
 
userId
 
=
 
await
 
_tokenService
 ,
.
, -
GetGuid
- 4
(
4 5
token
5 :
)
: ;
;
; <
var
 
responce
 
=
 
await
  
_authorService
! /
.
/ 0

DeletePost
0 :
(
: ;
userId
; A
,
A B
postId
C I
)
I J
;
J K
return
 
Ok
 
(
 
responce
 
)
 
;
  
}
 	
}
 
} 